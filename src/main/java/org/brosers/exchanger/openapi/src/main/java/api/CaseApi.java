/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package api;

import model.Attachment;
import model.CalculationSummary;
import model.CaseData;
import model.CaseDataRevision;
import model.CaseMediator;
import model.ClientData;
import model.ClientInteractionEvent;
import model.ClientInteractionSummary;
import model.CourtHearingMeeting;
import model.CreditData;
import model.CreditDecision;
import model.CreditDecisionEvent;
import model.DocumentationData;
import model.FinalizationParameters;
import model.KNFData;
import model.KnfHistoryOperation;
import model.KnfMediator;
import model.MediationOutcome;
import model.NegotiationLimit;
import model.Note;
import model.NoteSectionEnum;
import model.OrganizationAttorney;
import model.Person;
import model.StatusResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-04-02T21:55:45.453890500+02:00[Europe/Warsaw]", comments = "Generator version: 7.4.0")
@Validated
@Tag(name = "case", description = "the case API")
public interface CaseApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /case/{caseId}/attachments : Create a Attachment
     * Creates a new instance of a &#x60;Attachment&#x60;.
     *
     * @param caseId  (required)
     * @param attachment A new &#x60;Attachment&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createAttachment",
        summary = "Create a Attachment",
        description = "Creates a new instance of a `Attachment`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Long.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/attachments",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Long> createAttachment(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "Attachment", description = "A new `Attachment` to be created.", required = true) @Valid @RequestBody Attachment attachment
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/attachments/{attachmentId}/binary : Uploads attachment binary content
     * Uploads attachment binary content
     *
     * @param caseId  (required)
     * @param attachmentId  (required)
     * @param body A new attachment binary content to be uploaded (required)
     * @return Successful response. (status code 201)
     */
    @Operation(
        operationId = "createAttachmentBinary",
        summary = "Uploads attachment binary content",
        description = "Uploads attachment binary content",
        responses = {
            @ApiResponse(responseCode = "201", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/attachments/{attachmentId}/binary",
        consumes = { "application/octet-stream" }
    )
    
    default ResponseEntity<Void> createAttachmentBinary(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "attachmentId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("attachmentId") Long attachmentId,
        @Parameter(name = "body", description = "A new attachment binary content to be uploaded", required = true) @Valid @RequestBody org.springframework.core.io.Resource body
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/calculation : Create a Calculation
     * Creates a new instance of a &#x60;Calculation&#x60;.
     *
     * @param caseId  (required)
     * @param calculationSummary A new &#x60;Calculation&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createCalculation",
        summary = "Create a Calculation",
        description = "Creates a new instance of a `Calculation`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CalculationSummary.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/calculation",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CalculationSummary> createCalculation(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "CalculationSummary", description = "A new `Calculation` to be created.", required = true) @Valid @RequestBody CalculationSummary calculationSummary
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"kwotaUmorzenia\" : -7.06837403899411E19, \"wysokoscPierwszegoWIBORuZKalkulacji\" : 4.122802483006178E9, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyStalymOprocentowaniuWOstatniejRacie\" : -7.536972926445414E9, \"ostatecznyTerminSplatyKredytu\" : \"2000-01-23T04:56:07.000+00:00\", \"marzaKredytu\" : 1.2747533132666435E9, \"stalaStopaProcentowa\" : 4.772563896771721E9, \"pozostalyKapitalDoSplatyPLN\" : 1.924267833366364E19, \"wysokoscMarzyStalaStopaProcentowa\" : -1.708783940232111E9, \"limitNegocjacyjny\" : [ { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 }, { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 } ], \"wysokoscOprocentowaniaPierwszejRatyPoUruchomieniuZKalkulacji\" : -5.395728226130416E9, \"caseId\" : 6, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyZmiennymOprocentowaniu\" : -2.767846501496151E9, \"id\" : 0, \"notatka\" : \"notatka\", \"wysokoscMarzyZmienneOprocentowanie\" : 8.602888487865067E9, \"procentowyWzrostObnizenieWysokosciRaty\" : -59457.53948049602 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case : Create a CaseData
     * Create the details of a single instance of a &#x60;CaseData&#x60;.
     *
     * @param caseData A new &#x60;CaseData&#x60; to be created. (required)
     * @return Successful response - returns a single &#x60;CaseData&#x60;. (status code 200)
     */
    @Operation(
        operationId = "createCaseData",
        summary = "Create a CaseData",
        description = "Create the details of a single instance of a `CaseData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `CaseData`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CaseData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CaseData> createCaseData(
        @Parameter(name = "CaseData", description = "A new `CaseData` to be created.", required = true) @Valid @RequestBody CaseData caseData
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"organisationId\" : \"organisationId\", \"numerKontraktu\" : \"numerKontraktu\", \"clientInteractionSummaryId\" : 5, \"knfDataId\" : 2, \"finalizationParametersId\" : 7, \"walutaKredytu\" : \"CHF\", \"mediationOutcomeId\" : 4, \"negotiationLimitIds\" : [ 6, 6 ], \"etapProcesu\" : \"NOWA\", \"statusTechniczny\" : \"NOWA\", \"umowaIndywidualna\" : true, \"sprawaPrzekazanaDoObslugiZewnetrznej\" : true, \"godzinaRejestracji\" : \"godzinaRejestracji\", \"numerSprawy\" : \"numerSprawy\", \"reopenCaseHistory\" : [ { \"closeDate\" : \"2000-01-23T04:56:07.000+00:00\", \"oldCaseId\" : 7 }, { \"closeDate\" : \"2000-01-23T04:56:07.000+00:00\", \"oldCaseId\" : 7 } ], \"wnioskujacyKlient\" : \"wnioskujacyKlient\", \"id\" : 0, \"wartoscKredytu\" : \"wartoscKredytu\", \"calculationSummaryId\" : 2, \"inicjatorProcesu\" : \"BANK\", \"opisPrzedmiotuMediacji\" : \"opisPrzedmiotuMediacji\", \"numerUmowy\" : \"numerUmowy\", \"clientDataIds\" : [ 5, 5 ], \"notatkiIds\" : [ 1, 1 ], \"typSprawy\" : \"MEDIACJE\", \"mediatorIds\" : [ 3, 3 ], \"documentationDataId\" : 1, \"creditDecisionId\" : 1, \"sprawaZmigrowana\" : true, \"dataAktualizacjiStatusu\" : \"2000-01-23T04:56:07.000+00:00\", \"courtHearingMeetingsIds\" : [ 7, 7 ], \"przypisanyUzytkownik\" : { \"id\" : 6, \"label\" : \"label\", \"value\" : \"value\" }, \"creditDataIds\" : [ 1, 1 ], \"dataRejestracji\" : \"2000-01-23T04:56:07.000+00:00\", \"organizationAttorneyIds\" : [ 9, 9 ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/case-mediator : Create a CaseMediator
     * Creates a new instance of a &#x60;CaseMediator&#x60;.
     *
     * @param caseId  (required)
     * @param caseMediator A new &#x60;CaseMediator&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createCaseMediator",
        summary = "Create a CaseMediator",
        description = "Creates a new instance of a `CaseMediator`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CaseMediator.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/case-mediator",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CaseMediator> createCaseMediator(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "CaseMediator", description = "A new `CaseMediator` to be created.", required = true) @Valid @RequestBody CaseMediator caseMediator
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"mediatorImie\" : \"mediatorImie\", \"mediatorNazwisko\" : \"mediatorNazwisko\", \"caseId\" : 6, \"id\" : 0, \"adresMailowy\" : \"adresMailowy\", \"knfMediatorId\" : 1, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/client-data : Create a ClientData
     * Creates a new instance of a &#x60;ClientData&#x60;.
     *
     * @param caseId  (required)
     * @param clientData A new &#x60;ClientData&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createClientData",
        summary = "Create a ClientData",
        description = "Creates a new instance of a `ClientData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ClientData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/client-data",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ClientData> createClientData(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "ClientData", description = "A new `ClientData` to be created.", required = true) @Valid @RequestBody ClientData clientData
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"adresZamieszkaniaKraj\" : \"adresZamieszkaniaKraj\", \"kredytobiorcaDoKontaktu\" : true, \"miejsceUrodzenia\" : \"miejsceUrodzenia\", \"adresDoKnfKodPocztowy\" : \"adresDoKnfKodPocztowy\", \"regon\" : \"regon\", \"numerISeriaDokumentu\" : \"numerISeriaDokumentu\", \"adresKorespondencyjnyMiasto\" : \"adresKorespondencyjnyMiasto\", \"adresKorespondencyjnyKodPocztowy\" : \"adresKorespondencyjnyKodPocztowy\", \"adresDoKnfNumerBudynku\" : \"adresDoKnfNumerBudynku\", \"numerTelefonuStacjonarny\" : \"numerTelefonuStacjonarny\", \"numerTelefonuSluzbowy\" : \"numerTelefonuSluzbowy\", \"nazwisko\" : \"nazwisko\", \"adresDoKnfNumerLocalu\" : \"adresDoKnfNumerLocalu\", \"caseId\" : 6, \"rodzajDokumentuTozsamosci\" : \"rodzajDokumentuTozsamosci\", \"id\" : 0, \"pesel\" : \"pesel\", \"adresMailowy\" : \"adresMailowy\", \"adresDoKnfMiasto\" : \"adresDoKnfMiasto\", \"idKlienta\" : \"idKlienta\", \"adresZamieszkaniaMiasto\" : \"adresZamieszkaniaMiasto\", \"klientPodpisalOswiadczeniePit\" : true, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\", \"adresDoKnfUlica\" : \"adresDoKnfUlica\", \"zgodaEmail\" : true, \"nazwaFirmy\" : \"nazwaFirmy\", \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\" : \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\", \"adresDoKnfKraj\" : \"adresDoKnfKraj\", \"dataUrodzenia\" : \"2000-01-23\", \"imie\" : \"imie\", \"adresKorespondencyjnyKraj\" : \"adresKorespondencyjnyKraj\", \"deleted\" : true, \"nazwiskoPanienskieMatki\" : \"nazwiskoPanienskieMatki\", \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\" : \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\", \"adresZamieszkaniaKodPocztowy\" : \"adresZamieszkaniaKodPocztowy\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/client-interactions : Create a ClientInteraction
     * Creates a new instance of a &#x60;ClientInteraction&#x60;.
     *
     * @param caseId  (required)
     * @param clientInteractionSummary A new &#x60;ClientInteraction&#x60; to be created. (required)
     * @return Successful response returning added ClientInteraction. (status code 200)
     */
    @Operation(
        operationId = "createClientInteraction",
        summary = "Create a ClientInteraction",
        description = "Creates a new instance of a `ClientInteraction`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response returning added ClientInteraction.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ClientInteractionSummary.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/client-interactions",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ClientInteractionSummary> createClientInteraction(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "ClientInteractionSummary", description = "A new `ClientInteraction` to be created.", required = true) @Valid @RequestBody ClientInteractionSummary clientInteractionSummary
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"liczbaProbKontaktuZKlientemRbi\" : \"liczbaProbKontaktuZKlientemRbi\", \"liczbaKontaktowZKlientemRbi\" : \"liczbaKontaktowZKlientemRbi\", \"dataWyslaniaOnePager\" : \"2000-01-23\", \"rozmowyIds\" : [ { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 }, { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 } ], \"caseId\" : 6, \"dataPozytywnejRozmowyZKlientemFirmaZewnetrzna\" : \"2000-01-23\", \"przyczynaOdmowy\" : \"BRAK_ZAINTERESOWANIA_UGODA\", \"liczbaProbKontaktuZKlientemFirmaZewnetrzna\" : \"liczbaProbKontaktuZKlientemFirmaZewnetrzna\", \"statusDokumentacjiKlienta\" : \"statusDokumentacjiKlienta\", \"id\" : 0, \"liczbaKontaktowZKlientemFirmaZewnetrzna\" : \"liczbaKontaktowZKlientemFirmaZewnetrzna\", \"dataPozytywnejRozmowyZKlientemRbi\" : \"2000-01-23\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/client-interactions/{clientinteractionId}/interaction-events : Create a ClientInteractionEvent
     * Creates a new instance of a &#x60;ClientInteractionEvent&#x60;.
     *
     * @param caseId  (required)
     * @param clientinteractionId  (required)
     * @param clientInteractionEvent A new &#x60;ClientInteractionEvent&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createClientInteractionEvent",
        summary = "Create a ClientInteractionEvent",
        description = "Creates a new instance of a `ClientInteractionEvent`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ClientInteractionEvent.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/client-interactions/{clientinteractionId}/interaction-events",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ClientInteractionEvent> createClientInteractionEvent(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "clientinteractionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clientinteractionId") Long clientinteractionId,
        @Parameter(name = "ClientInteractionEvent", description = "A new `ClientInteractionEvent` to be created.", required = true) @Valid @RequestBody ClientInteractionEvent clientInteractionEvent
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/court-hearing-meetings : Create a CourtHearingMeeting
     * Creates a new instance of a &#x60;CourtHearingMeeting&#x60;.
     *
     * @param caseId  (required)
     * @param courtHearingMeeting A new &#x60;CourtHearingMeeting&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createCourtHearingMeeting",
        summary = "Create a CourtHearingMeeting",
        description = "Creates a new instance of a `CourtHearingMeeting`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CourtHearingMeeting.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/court-hearing-meetings",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CourtHearingMeeting> createCourtHearingMeeting(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "CourtHearingMeeting", description = "A new `CourtHearingMeeting` to be created.", required = true) @Valid @RequestBody CourtHearingMeeting courtHearingMeeting
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"uczestnicy\" : [ \"uczestnicy\", \"uczestnicy\" ], \"caseId\" : 6, \"godzinaSpotkania\" : \"godzinaSpotkania\", \"dataSpotkania\" : \"2000-01-23\", \"id\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/credit-data : Create a CreditData
     * Creates a new instance of a &#x60;CreditData&#x60;.
     *
     * @param caseId  (required)
     * @param creditData A new &#x60;CreditData&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createCreditData",
        summary = "Create a CreditData",
        description = "Creates a new instance of a `CreditData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreditData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/credit-data",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CreditData> createCreditData(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "CreditData", description = "A new `CreditData` to be created.", required = true) @Valid @RequestBody CreditData creditData
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"dataDanychSekcji\" : \"2000-01-23\", \"numerKontraktu\" : \"numerKontraktu\", \"inneAktywneKredytyKlientaWChf\" : \"inneAktywneKredytyKlientaWChf\", \"formulaSplaty\" : \"RATY_STALE\", \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\" : \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\", \"walutaKredytu\" : \"PLN\", \"upadloscKonsumencka\" : true, \"aktywnyCovid3Moratorium\" : true, \"statusUmowyKredytowej\" : \"AKTYWNA\", \"informacjaODpd\" : \"informacjaODpd\", \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\", \"zalegloscWInsZycie\" : true, \"inneKredytyKlientaPowiazaneZIns\" : \"inneKredytyKlientaPowiazaneZIns\", \"caseId\" : 6, \"id\" : 0, \"aktualneSaldoZadluzeniaWWalucieChfKapital\" : \"aktualneSaldoZadluzeniaWWalucieChfKapital\", \"zalegloscWInsNieruchomosc\" : true, \"dzienPlatnosciRaty\" : \"dzienPlatnosciRaty\", \"indeksowanyCzyDenominowany\" : \"INDEKSOWANY\", \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\", \"numerUmowy\" : \"numerUmowy\", \"zgon\" : true, \"dataZapadalnosciKredytu\" : \"2000-01-23\", \"kwotaWyplaconegoKredytuWPln\" : 1.4658129805029452, \"dataKursuNbp\" : \"2000-01-23\", \"fwk\" : true, \"wysokoscKursu\" : 5.962133916683182, \"aktywnaRestrukturyzacja\" : true, \"sprawaSadowaCourtCase4\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/credit-decisions : Create a CreditDecision
     * Creates a new instance of a &#x60;CreditDecision&#x60;.
     *
     * @param caseId  (required)
     * @param creditDecision A new &#x60;CreditDecision&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createCreditDecision",
        summary = "Create a CreditDecision",
        description = "Creates a new instance of a `CreditDecision`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreditDecision.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/credit-decisions",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CreditDecision> createCreditDecision(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "CreditDecision", description = "A new `CreditDecision` to be created.", required = true) @Valid @RequestBody CreditDecision creditDecision
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"kwotaUmorzenia\" : 1.4658129805029452, \"numerKontraktu\" : \"numerKontraktu\", \"wysokoscPierwszegoWIBORuZKalkulacji\" : -5.3957282261250734E7, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyStalymOprocentowaniuWOstatniejRacie\" : 4.772563896766995E7, \"ostatecznyTerminSplatyKredytu\" : \"2000-01-23T04:56:07.000+00:00\", \"marzaKredytu\" : 1.9242678333644405E7, \"stalaStopaProcentowa\" : -1.7087839402304187E7, \"creditDecisionEvents\" : [ { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 }, { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 } ], \"pozostalyKapitalDoSplatyPLN\" : \"pozostalyKapitalDoSplatyPLN\", \"wysokoscMarzyStalaStopaProcentowa\" : -5.9457539539894104E7, \"numerSprawy\" : \"numerSprawy\", \"caseId\" : 6, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyZmiennymOprocentowaniu\" : 8.60288848785655E7, \"id\" : 0, \"przypisanyUzytkownik\" : { \"id\" : 6, \"label\" : \"label\", \"value\" : \"value\" }, \"wysokoscOprocentowaniaPierwszejRatyPoUruchomieniu\" : 1.2747533132653818E7, \"wysokoscMarzyZmienneOprocentowanie\" : 4.122802483002095E7, \"procentowyWzrostObnizenieWysokosciRaty\" : -27678.46498728331, \"idKlienta\" : \"idKlienta\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/credit-decisions/{creditDecisionId}/decision-events : Create a CreditDecisionEvent
     * Creates a new instance of a &#x60;CreditDecisionEvent&#x60;.
     *
     * @param caseId  (required)
     * @param creditDecisionId  (required)
     * @param creditDecisionEvent A new &#x60;CreditDecisionEvent&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createCreditDecisionEvent",
        summary = "Create a CreditDecisionEvent",
        description = "Creates a new instance of a `CreditDecisionEvent`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreditDecisionEvent.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/credit-decisions/{creditDecisionId}/decision-events",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CreditDecisionEvent> createCreditDecisionEvent(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "creditDecisionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("creditDecisionId") Long creditDecisionId,
        @Parameter(name = "CreditDecisionEvent", description = "A new `CreditDecisionEvent` to be created.", required = true) @Valid @RequestBody CreditDecisionEvent creditDecisionEvent
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/documentation-data : Create a DocumentationData
     * Creates a new instance of a &#x60;DocumentationData&#x60;.
     *
     * @param caseId  (required)
     * @param documentationData A new &#x60;DocumentationData&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createDocumentationData",
        summary = "Create a DocumentationData",
        description = "Creates a new instance of a `DocumentationData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = DocumentationData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/documentation-data",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<DocumentationData> createDocumentationData(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "DocumentationData", description = "A new `DocumentationData` to be created.", required = true) @Valid @RequestBody DocumentationData documentationData
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"dataOtrzymaniaPodpisanychDokumentow\" : \"2000-01-23\", \"dataWysylkiUmowyMediacyjnejDoKnf\" : \"2000-01-23\", \"planowanaDataRealizacji\" : \"2000-01-23\", \"numerDyspozycji\" : \"numerDyspozycji\", \"dataPrzygotowaniaOstatecznejDokumentacji\" : \"2000-01-23\", \"dataOdeslaniaUmowyDoKnf\" : \"2000-01-23\", \"warunkiDecyzji\" : \"warunkiDecyzji\", \"caseId\" : 6, \"czyKlientPodpisalOswiadczeniePit\" : true, \"dataWysylkiDokumentowRNet\" : \"2000-01-23\", \"id\" : 0, \"dataPozytywnegoWynikuMediacji\" : \"2000-01-23\", \"dataKalkulacjiPrzedMediacja\" : \"2000-01-23\", \"dataPrzygotowaniaOstatecznejKalkulacji\" : \"2000-01-23\", \"dataWaznosciDecyzji\" : \"2000-01-23\", \"kompletnoscUmowyMediacyjnej\" : true, \"wymaganaDataPrzygotowaniaKalkulacjiPrzedMediacja\" : \"2000-01-23\", \"dataWysylkiDokumentowKurierem\" : \"2000-01-23\", \"dataWplywuUmowyMediacyjnej\" : \"2000-01-23\", \"dataOdeslaniaUmowyDoKlienta\" : \"2000-01-23\", \"dataPrzygotowaniaDokumentowDoMediacji\" : \"2000-01-23\", \"statusDecyzji\" : \"statusDecyzji\", \"dataZawarciaUgody\" : \"2000-01-23T04:56:07.000+00:00\", \"dataKoniecznegoPrzypomnieniaOZwrocieDokumentow\" : \"2000-01-23\", \"wymaganaDataPrzygotowaniaDokumentacjiPrzedMediacja\" : \"2000-01-23\", \"dataPrzekazaniaDokumentacjiDoKnfKlientaPelnomocnika\" : \"2000-01-23\", \"dataRealizacjiWSystemie\" : \"2000-01-23\", \"czyDokumentyKompletne\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/finalization-parameters : Create a FinalizationParameters
     * Creates a new instance of a &#x60;FinalizationParameters&#x60;.
     *
     * @param caseId  (required)
     * @param finalizationParameters A new &#x60;FinalizationParameters&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createFinalizationParameters",
        summary = "Create a FinalizationParameters",
        description = "Creates a new instance of a `FinalizationParameters`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = FinalizationParameters.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/finalization-parameters",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<FinalizationParameters> createFinalizationParameters(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "FinalizationParameters", description = "A new `FinalizationParameters` to be created.", required = true) @Valid @RequestBody FinalizationParameters finalizationParameters
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"outstandingBalanceBeforeSettlementInPLN\" : \"outstandingBalanceBeforeSettlementInPLN\", \"riskGroup\" : \"HIGH_RISK\", \"caseId\" : 6, \"outstandingBalanceBeforeSettlementInCHF\" : \"outstandingBalanceBeforeSettlementInCHF\", \"amountWO\" : \"amountWO\", \"outstandingBalanceAfterTheSettlementInPLN\" : \"outstandingBalanceAfterTheSettlementInPLN\", \"percentageWO\" : \"percentageWO\", \"dataKursuNBP\" : \"2000-01-23\", \"id\" : 0, \"kursNBP\" : \"kursNBP\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/knf-data : Create a KNFData
     * Creates a new instance of a &#x60;KNFData&#x60;.
     *
     * @param caseId  (required)
     * @param knFData A new &#x60;KNFData&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createKNFData",
        summary = "Create a KNFData",
        description = "Creates a new instance of a `KNFData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = KNFData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/knf-data",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<KNFData> createKNFData(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "KNFData", description = "A new `KNFData` to be created.", required = true) @Valid @RequestBody KNFData knFData
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"technicznyIdentyfikatorSprawyWKnf\" : \"technicznyIdentyfikatorSprawyWKnf\", \"dataPrzekazaniaUmowyDoKnf\" : \"2000-01-23\", \"caseId\" : 6, \"sygnaturaSprawy\" : \"sygnaturaSprawy\", \"id\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/mediation-outcomes : Create a MediationOutcome
     * Creates a new instance of a &#x60;MediationOutcome&#x60;.
     *
     * @param caseId  (required)
     * @param mediationOutcome A new &#x60;MediationOutcome&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createMediationOutcome",
        summary = "Create a MediationOutcome",
        description = "Creates a new instance of a `MediationOutcome`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MediationOutcome.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/mediation-outcomes",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<MediationOutcome> createMediationOutcome(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "MediationOutcome", description = "A new `MediationOutcome` to be created.", required = true) @Valid @RequestBody MediationOutcome mediationOutcome
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"rodzajUgody\" : \"KONTYNUACJA_ZMIENNE_OPROCENTOWANIE\", \"wynegocjowanaMarza\" : \"wynegocjowanaMarza\", \"wynegocjowanaKwotaDoSplaty\" : 1.4658129805029452, \"dataPrzekazaniaDecyzjiNegatywnej\" : \"2000-01-23T04:56:07.000+00:00\", \"dataPrzekazaniaDecyzjiPozytywnej\" : \"2000-01-23\", \"caseId\" : 6, \"decyzjaKlienta\" : \"POZYTYWNA\", \"id\" : 0, \"wynegocjowaneWarunki\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/calculation/{calculationId}/negotiation-limits : Create a NegotiationLimit
     * Creates a new instance of a &#x60;NegotiationLimit&#x60;.
     *
     * @param caseId  (required)
     * @param calculationId  (required)
     * @param negotiationLimit A new &#x60;NegotiationLimit&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createNegotiationLimit",
        summary = "Create a NegotiationLimit",
        description = "Creates a new instance of a `NegotiationLimit`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NegotiationLimit.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/calculation/{calculationId}/negotiation-limits",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<NegotiationLimit> createNegotiationLimit(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "calculationId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("calculationId") String calculationId,
        @Parameter(name = "NegotiationLimit", description = "A new `NegotiationLimit` to be created.", required = true) @Valid @RequestBody NegotiationLimit negotiationLimit
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/notes : Create a Note
     * Creates a new instance of a &#x60;Note&#x60;.
     *
     * @param caseId  (required)
     * @param note A new &#x60;Note&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createNote",
        summary = "Create a Note",
        description = "Creates a new instance of a `Note`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Note.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/notes",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Note> createNote(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "Note", description = "A new `Note` to be created.", required = true) @Valid @RequestBody Note note
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"authorUiName\" : \"authorUiName\", \"notatki\" : \"notatki\", \"caseId\" : 6, \"dataDodania\" : \"2000-01-23T04:56:07.000+00:00\", \"section\" : \"section\", \"id\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/organization-attorneys : Create a OrganizationAttorney
     * Creates a new instance of a &#x60;OrganizationAttorney&#x60;.
     *
     * @param caseId  (required)
     * @param organizationAttorney A new &#x60;OrganizationAttorney&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "createOrganizationAttorney",
        summary = "Create a OrganizationAttorney",
        description = "Creates a new instance of a `OrganizationAttorney`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OrganizationAttorney.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/organization-attorneys",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<OrganizationAttorney> createOrganizationAttorney(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "OrganizationAttorney", description = "A new `OrganizationAttorney` to be created.", required = true) @Valid @RequestBody OrganizationAttorney organizationAttorney
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/attachments/{attachmentId} : Delete a Attachment. Also deletes the binary
     * Deletes an existing &#x60;Attachment&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;Attachment&#x60;. (required)
     * @param attachmentId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteAttachment",
        summary = "Delete a Attachment. Also deletes the binary",
        description = "Deletes an existing `Attachment`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/attachments/{attachmentId}"
    )
    
    default ResponseEntity<Void> deleteAttachment(
        @Parameter(name = "caseId", description = "A unique identifier for a `Attachment`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "attachmentId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("attachmentId") Long attachmentId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/attachments/{attachmentId}/binary : Delete vbinary content for an attachment
     * Deletes an existing binary content for an attachment
     *
     * @param caseId  (required)
     * @param attachmentId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteAttachmentBinary",
        summary = "Delete vbinary content for an attachment",
        description = "Deletes an existing binary content for an attachment",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/attachments/{attachmentId}/binary"
    )
    
    default ResponseEntity<Void> deleteAttachmentBinary(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "attachmentId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("attachmentId") Long attachmentId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/calculation/{calculationId} : Delete a CalculationSummary
     * Deletes an existing &#x60;CalculationSummary&#x60;.
     *
     * @param caseId  (required)
     * @param calculationId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteCalculation",
        summary = "Delete a CalculationSummary",
        description = "Deletes an existing `CalculationSummary`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/calculation/{calculationId}"
    )
    
    default ResponseEntity<Void> deleteCalculation(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "calculationId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("calculationId") Long calculationId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId} : Delete a CaseData
     * Deletes an existing &#x60;CaseData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;CaseData&#x60;. (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteCaseData",
        summary = "Delete a CaseData",
        description = "Deletes an existing `CaseData`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}"
    )
    
    default ResponseEntity<Void> deleteCaseData(
        @Parameter(name = "caseId", description = "A unique identifier for a `CaseData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/case-mediator/{caseMediatorId} : Delete a CaseMediator
     * Deletes an existing &#x60;CaseMediator&#x60;.
     *
     * @param caseId A unique identifier of CaseId. (required)
     * @param caseMediatorId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteCaseMediator",
        summary = "Delete a CaseMediator",
        description = "Deletes an existing `CaseMediator`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/case-mediator/{caseMediatorId}"
    )
    
    default ResponseEntity<Void> deleteCaseMediator(
        @Parameter(name = "caseId", description = "A unique identifier of CaseId.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "caseMediatorId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseMediatorId") Long caseMediatorId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/client-data/{clientdataId} : Delete a ClientData
     * Deletes an existing &#x60;ClientData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;ClientData&#x60;. (required)
     * @param clientdataId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteClientData",
        summary = "Delete a ClientData",
        description = "Deletes an existing `ClientData`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/client-data/{clientdataId}"
    )
    
    default ResponseEntity<Void> deleteClientData(
        @Parameter(name = "caseId", description = "A unique identifier for a `ClientData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "clientdataId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clientdataId") String clientdataId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/client-interactions/{clientinteractionId} : Delete a ClientInteraction
     * Deletes an existing &#x60;ClientInteraction&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;ClientInteraction&#x60;. (required)
     * @param clientinteractionId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteClientInteraction",
        summary = "Delete a ClientInteraction",
        description = "Deletes an existing `ClientInteraction`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/client-interactions/{clientinteractionId}"
    )
    
    default ResponseEntity<Void> deleteClientInteraction(
        @Parameter(name = "caseId", description = "A unique identifier for a `ClientInteraction`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "clientinteractionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clientinteractionId") String clientinteractionId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/client-interactions/{clientinteractionId}/interaction-events/{interactionEventId} : Delete a ClientInteractionEvent
     * Deletes an existing &#x60;ClientInteractionEvent&#x60;.
     *
     * @param caseId  (required)
     * @param clientinteractionId  (required)
     * @param interactionEventId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteClientInteractionEvent",
        summary = "Delete a ClientInteractionEvent",
        description = "Deletes an existing `ClientInteractionEvent`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/client-interactions/{clientinteractionId}/interaction-events/{interactionEventId}"
    )
    
    default ResponseEntity<Void> deleteClientInteractionEvent(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "clientinteractionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clientinteractionId") Long clientinteractionId,
        @Parameter(name = "interactionEventId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("interactionEventId") Long interactionEventId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/court-hearing-meetings/{courthearingmeetingId} : Delete a CourtHearingMeeting
     * Deletes an existing &#x60;CourtHearingMeeting&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;CourtHearingMeeting&#x60;. (required)
     * @param courthearingmeetingId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteCourtHearingMeeting",
        summary = "Delete a CourtHearingMeeting",
        description = "Deletes an existing `CourtHearingMeeting`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/court-hearing-meetings/{courthearingmeetingId}"
    )
    
    default ResponseEntity<Void> deleteCourtHearingMeeting(
        @Parameter(name = "caseId", description = "A unique identifier for a `CourtHearingMeeting`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "courthearingmeetingId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("courthearingmeetingId") String courthearingmeetingId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/credit-data/{creditdataId} : Delete a CreditData
     * Deletes an existing &#x60;CreditData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;CreditData&#x60;. (required)
     * @param creditdataId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteCreditData",
        summary = "Delete a CreditData",
        description = "Deletes an existing `CreditData`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/credit-data/{creditdataId}"
    )
    
    default ResponseEntity<Void> deleteCreditData(
        @Parameter(name = "caseId", description = "A unique identifier for a `CreditData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "creditdataId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("creditdataId") String creditdataId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/credit-decisions/{creditDecisionId} : Delete a CreditDecision
     * Deletes an existing &#x60;CreditDecision&#x60;.
     *
     * @param caseId  (required)
     * @param creditDecisionId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteCreditDecision",
        summary = "Delete a CreditDecision",
        description = "Deletes an existing `CreditDecision`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/credit-decisions/{creditDecisionId}"
    )
    
    default ResponseEntity<Void> deleteCreditDecision(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "creditDecisionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("creditDecisionId") Long creditDecisionId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/credit-decisions/{creditDecisionId}/decision-events/{decisionEventId} : Delete a CreditDecisionEvent
     * Deletes an existing &#x60;CreditDecisionEvent&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;CreditDecisionEvent&#x60;. (required)
     * @param creditDecisionId  (required)
     * @param decisionEventId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteCreditDecisionEvent",
        summary = "Delete a CreditDecisionEvent",
        description = "Deletes an existing `CreditDecisionEvent`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/credit-decisions/{creditDecisionId}/decision-events/{decisionEventId}"
    )
    
    default ResponseEntity<Void> deleteCreditDecisionEvent(
        @Parameter(name = "caseId", description = "A unique identifier for a `CreditDecisionEvent`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "creditDecisionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("creditDecisionId") Long creditDecisionId,
        @Parameter(name = "decisionEventId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("decisionEventId") Long decisionEventId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/documentation-data/{documentationId} : Delete a DocumentationData
     * Deletes an existing &#x60;DocumentationData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;DocumentationData&#x60;. (required)
     * @param documentationId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteDocumentationData",
        summary = "Delete a DocumentationData",
        description = "Deletes an existing `DocumentationData`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/documentation-data/{documentationId}"
    )
    
    default ResponseEntity<Void> deleteDocumentationData(
        @Parameter(name = "caseId", description = "A unique identifier for a `DocumentationData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "documentationId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("documentationId") Long documentationId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/finalization-parameters/{finalizationparametersId} : Delete a FinalizationParameters
     * Deletes an existing &#x60;FinalizationParameters&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;FinalizationParameters&#x60;. (required)
     * @param finalizationparametersId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteFinalizationParameters",
        summary = "Delete a FinalizationParameters",
        description = "Deletes an existing `FinalizationParameters`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/finalization-parameters/{finalizationparametersId}"
    )
    
    default ResponseEntity<Void> deleteFinalizationParameters(
        @Parameter(name = "caseId", description = "A unique identifier for a `FinalizationParameters`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "finalizationparametersId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("finalizationparametersId") String finalizationparametersId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/knf-data/{knfdataId} : Delete a KNFData
     * Deletes an existing &#x60;KNFData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;KNFData&#x60;. (required)
     * @param knfdataId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteKNFData",
        summary = "Delete a KNFData",
        description = "Deletes an existing `KNFData`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/knf-data/{knfdataId}"
    )
    
    default ResponseEntity<Void> deleteKNFData(
        @Parameter(name = "caseId", description = "A unique identifier for a `KNFData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "knfdataId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("knfdataId") String knfdataId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/mediation-outcomes/{mediationoutcomeId} : Delete a MediationOutcome
     * Deletes an existing &#x60;MediationOutcome&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;MediationOutcome&#x60;. (required)
     * @param mediationoutcomeId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteMediationOutcome",
        summary = "Delete a MediationOutcome",
        description = "Deletes an existing `MediationOutcome`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/mediation-outcomes/{mediationoutcomeId}"
    )
    
    default ResponseEntity<Void> deleteMediationOutcome(
        @Parameter(name = "caseId", description = "A unique identifier for a `MediationOutcome`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "mediationoutcomeId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("mediationoutcomeId") String mediationoutcomeId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/calculation/{calculationId}/negotiation-limits/{negotiationlimitId} : Delete a NegotiationLimit
     * Deletes an existing &#x60;NegotiationLimit&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;NegotiationLimit&#x60;. (required)
     * @param calculationId  (required)
     * @param negotiationlimitId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteNegotiationLimit",
        summary = "Delete a NegotiationLimit",
        description = "Deletes an existing `NegotiationLimit`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/calculation/{calculationId}/negotiation-limits/{negotiationlimitId}"
    )
    
    default ResponseEntity<Void> deleteNegotiationLimit(
        @Parameter(name = "caseId", description = "A unique identifier for a `NegotiationLimit`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "calculationId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("calculationId") String calculationId,
        @Parameter(name = "negotiationlimitId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("negotiationlimitId") String negotiationlimitId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /case/{caseId}/organization-attorneys/{organizationattorneyId} : Delete a OrganizationAttorney
     * Deletes an existing &#x60;OrganizationAttorney&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;OrganizationAttorney&#x60;. (required)
     * @param organizationattorneyId  (required)
     * @return Successful response. (status code 204)
     */
    @Operation(
        operationId = "deleteOrganizationAttorney",
        summary = "Delete a OrganizationAttorney",
        description = "Deletes an existing `OrganizationAttorney`.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/case/{caseId}/organization-attorneys/{organizationattorneyId}"
    )
    
    default ResponseEntity<Void> deleteOrganizationAttorney(
        @Parameter(name = "caseId", description = "A unique identifier for a `OrganizationAttorney`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "organizationattorneyId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("organizationattorneyId") String organizationattorneyId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/case-mediator : List All CaseMediator
     * Gets a list of all &#x60;CaseMediator&#x60; entities.
     *
     * @param caseId  (required)
     * @return Successful response - returns an array of &#x60;CaseMediator&#x60; entities by caseId. (status code 200)
     */
    @Operation(
        operationId = "getAllCaseMediators",
        summary = "List All CaseMediator",
        description = "Gets a list of all `CaseMediator` entities.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `CaseMediator` entities by caseId.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = CaseMediator.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/case-mediator",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<CaseMediator>> getAllCaseMediators(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"mediatorImie\" : \"mediatorImie\", \"mediatorNazwisko\" : \"mediatorNazwisko\", \"caseId\" : 6, \"id\" : 0, \"adresMailowy\" : \"adresMailowy\", \"knfMediatorId\" : 1, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\" }, { \"mediatorImie\" : \"mediatorImie\", \"mediatorNazwisko\" : \"mediatorNazwisko\", \"caseId\" : 6, \"id\" : 0, \"adresMailowy\" : \"adresMailowy\", \"knfMediatorId\" : 1, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/client-data : List All ClientData
     * Gets a list of all &#x60;ClientData&#x60; entities.
     *
     * @param caseId  (required)
     * @return Successful response - returns an array of &#x60;ClientData&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getAllClientData",
        summary = "List All ClientData",
        description = "Gets a list of all `ClientData` entities.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `ClientData` entities.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = ClientData.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/client-data",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<ClientData>> getAllClientData(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"adresZamieszkaniaKraj\" : \"adresZamieszkaniaKraj\", \"kredytobiorcaDoKontaktu\" : true, \"miejsceUrodzenia\" : \"miejsceUrodzenia\", \"adresDoKnfKodPocztowy\" : \"adresDoKnfKodPocztowy\", \"regon\" : \"regon\", \"numerISeriaDokumentu\" : \"numerISeriaDokumentu\", \"adresKorespondencyjnyMiasto\" : \"adresKorespondencyjnyMiasto\", \"adresKorespondencyjnyKodPocztowy\" : \"adresKorespondencyjnyKodPocztowy\", \"adresDoKnfNumerBudynku\" : \"adresDoKnfNumerBudynku\", \"numerTelefonuStacjonarny\" : \"numerTelefonuStacjonarny\", \"numerTelefonuSluzbowy\" : \"numerTelefonuSluzbowy\", \"nazwisko\" : \"nazwisko\", \"adresDoKnfNumerLocalu\" : \"adresDoKnfNumerLocalu\", \"caseId\" : 6, \"rodzajDokumentuTozsamosci\" : \"rodzajDokumentuTozsamosci\", \"id\" : 0, \"pesel\" : \"pesel\", \"adresMailowy\" : \"adresMailowy\", \"adresDoKnfMiasto\" : \"adresDoKnfMiasto\", \"idKlienta\" : \"idKlienta\", \"adresZamieszkaniaMiasto\" : \"adresZamieszkaniaMiasto\", \"klientPodpisalOswiadczeniePit\" : true, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\", \"adresDoKnfUlica\" : \"adresDoKnfUlica\", \"zgodaEmail\" : true, \"nazwaFirmy\" : \"nazwaFirmy\", \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\" : \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\", \"adresDoKnfKraj\" : \"adresDoKnfKraj\", \"dataUrodzenia\" : \"2000-01-23\", \"imie\" : \"imie\", \"adresKorespondencyjnyKraj\" : \"adresKorespondencyjnyKraj\", \"deleted\" : true, \"nazwiskoPanienskieMatki\" : \"nazwiskoPanienskieMatki\", \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\" : \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\", \"adresZamieszkaniaKodPocztowy\" : \"adresZamieszkaniaKodPocztowy\" }, { \"adresZamieszkaniaKraj\" : \"adresZamieszkaniaKraj\", \"kredytobiorcaDoKontaktu\" : true, \"miejsceUrodzenia\" : \"miejsceUrodzenia\", \"adresDoKnfKodPocztowy\" : \"adresDoKnfKodPocztowy\", \"regon\" : \"regon\", \"numerISeriaDokumentu\" : \"numerISeriaDokumentu\", \"adresKorespondencyjnyMiasto\" : \"adresKorespondencyjnyMiasto\", \"adresKorespondencyjnyKodPocztowy\" : \"adresKorespondencyjnyKodPocztowy\", \"adresDoKnfNumerBudynku\" : \"adresDoKnfNumerBudynku\", \"numerTelefonuStacjonarny\" : \"numerTelefonuStacjonarny\", \"numerTelefonuSluzbowy\" : \"numerTelefonuSluzbowy\", \"nazwisko\" : \"nazwisko\", \"adresDoKnfNumerLocalu\" : \"adresDoKnfNumerLocalu\", \"caseId\" : 6, \"rodzajDokumentuTozsamosci\" : \"rodzajDokumentuTozsamosci\", \"id\" : 0, \"pesel\" : \"pesel\", \"adresMailowy\" : \"adresMailowy\", \"adresDoKnfMiasto\" : \"adresDoKnfMiasto\", \"idKlienta\" : \"idKlienta\", \"adresZamieszkaniaMiasto\" : \"adresZamieszkaniaMiasto\", \"klientPodpisalOswiadczeniePit\" : true, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\", \"adresDoKnfUlica\" : \"adresDoKnfUlica\", \"zgodaEmail\" : true, \"nazwaFirmy\" : \"nazwaFirmy\", \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\" : \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\", \"adresDoKnfKraj\" : \"adresDoKnfKraj\", \"dataUrodzenia\" : \"2000-01-23\", \"imie\" : \"imie\", \"adresKorespondencyjnyKraj\" : \"adresKorespondencyjnyKraj\", \"deleted\" : true, \"nazwiskoPanienskieMatki\" : \"nazwiskoPanienskieMatki\", \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\" : \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\", \"adresZamieszkaniaKodPocztowy\" : \"adresZamieszkaniaKodPocztowy\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/credit-data : List All CreditData
     * Gets a list of all &#x60;CreditData&#x60; entities.
     *
     * @param caseId  (required)
     * @return Successful response - returns an array of &#x60;CreditData&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getAllCreditData",
        summary = "List All CreditData",
        description = "Gets a list of all `CreditData` entities.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `CreditData` entities.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = CreditData.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/credit-data",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<CreditData>> getAllCreditData(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"dataDanychSekcji\" : \"2000-01-23\", \"numerKontraktu\" : \"numerKontraktu\", \"inneAktywneKredytyKlientaWChf\" : \"inneAktywneKredytyKlientaWChf\", \"formulaSplaty\" : \"RATY_STALE\", \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\" : \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\", \"walutaKredytu\" : \"PLN\", \"upadloscKonsumencka\" : true, \"aktywnyCovid3Moratorium\" : true, \"statusUmowyKredytowej\" : \"AKTYWNA\", \"informacjaODpd\" : \"informacjaODpd\", \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\", \"zalegloscWInsZycie\" : true, \"inneKredytyKlientaPowiazaneZIns\" : \"inneKredytyKlientaPowiazaneZIns\", \"caseId\" : 6, \"id\" : 0, \"aktualneSaldoZadluzeniaWWalucieChfKapital\" : \"aktualneSaldoZadluzeniaWWalucieChfKapital\", \"zalegloscWInsNieruchomosc\" : true, \"dzienPlatnosciRaty\" : \"dzienPlatnosciRaty\", \"indeksowanyCzyDenominowany\" : \"INDEKSOWANY\", \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\", \"numerUmowy\" : \"numerUmowy\", \"zgon\" : true, \"dataZapadalnosciKredytu\" : \"2000-01-23\", \"kwotaWyplaconegoKredytuWPln\" : 1.4658129805029452, \"dataKursuNbp\" : \"2000-01-23\", \"fwk\" : true, \"wysokoscKursu\" : 5.962133916683182, \"aktywnaRestrukturyzacja\" : true, \"sprawaSadowaCourtCase4\" : true }, { \"dataDanychSekcji\" : \"2000-01-23\", \"numerKontraktu\" : \"numerKontraktu\", \"inneAktywneKredytyKlientaWChf\" : \"inneAktywneKredytyKlientaWChf\", \"formulaSplaty\" : \"RATY_STALE\", \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\" : \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\", \"walutaKredytu\" : \"PLN\", \"upadloscKonsumencka\" : true, \"aktywnyCovid3Moratorium\" : true, \"statusUmowyKredytowej\" : \"AKTYWNA\", \"informacjaODpd\" : \"informacjaODpd\", \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\", \"zalegloscWInsZycie\" : true, \"inneKredytyKlientaPowiazaneZIns\" : \"inneKredytyKlientaPowiazaneZIns\", \"caseId\" : 6, \"id\" : 0, \"aktualneSaldoZadluzeniaWWalucieChfKapital\" : \"aktualneSaldoZadluzeniaWWalucieChfKapital\", \"zalegloscWInsNieruchomosc\" : true, \"dzienPlatnosciRaty\" : \"dzienPlatnosciRaty\", \"indeksowanyCzyDenominowany\" : \"INDEKSOWANY\", \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\", \"numerUmowy\" : \"numerUmowy\", \"zgon\" : true, \"dataZapadalnosciKredytu\" : \"2000-01-23\", \"kwotaWyplaconegoKredytuWPln\" : 1.4658129805029452, \"dataKursuNbp\" : \"2000-01-23\", \"fwk\" : true, \"wysokoscKursu\" : 5.962133916683182, \"aktywnaRestrukturyzacja\" : true, \"sprawaSadowaCourtCase4\" : true } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/finalization-parameters : Get FinalizationParameters
     * Gets a &#x60;FinalizationParameters&#x60; entity.
     *
     * @param caseId  (required)
     * @return Successful response - returns an of &#x60;FinalizationParameters&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getAllFinalizationParameters",
        summary = "Get FinalizationParameters",
        description = "Gets a `FinalizationParameters` entity.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an of `FinalizationParameters` entities.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = FinalizationParameters.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/finalization-parameters",
        produces = { "application/json" }
    )
    
    default ResponseEntity<FinalizationParameters> getAllFinalizationParameters(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"outstandingBalanceBeforeSettlementInPLN\" : \"outstandingBalanceBeforeSettlementInPLN\", \"riskGroup\" : \"HIGH_RISK\", \"caseId\" : 6, \"outstandingBalanceBeforeSettlementInCHF\" : \"outstandingBalanceBeforeSettlementInCHF\", \"amountWO\" : \"amountWO\", \"outstandingBalanceAfterTheSettlementInPLN\" : \"outstandingBalanceAfterTheSettlementInPLN\", \"percentageWO\" : \"percentageWO\", \"dataKursuNBP\" : \"2000-01-23\", \"id\" : 0, \"kursNBP\" : \"kursNBP\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/knf-data : KNFData
     * Gets a of &#x60;KNFData&#x60; entity.
     *
     * @param caseId  (required)
     * @return Successful response - returns an of &#x60;KNFData&#x60; entity. (status code 200)
     */
    @Operation(
        operationId = "getAllKNFData",
        summary = "KNFData",
        description = "Gets a of `KNFData` entity.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an of `KNFData` entity.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = KNFData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/knf-data",
        produces = { "application/json" }
    )
    
    default ResponseEntity<KNFData> getAllKNFData(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"technicznyIdentyfikatorSprawyWKnf\" : \"technicznyIdentyfikatorSprawyWKnf\", \"dataPrzekazaniaUmowyDoKnf\" : \"2000-01-23\", \"caseId\" : 6, \"sygnaturaSprawy\" : \"sygnaturaSprawy\", \"id\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/organization-attorneys/list : List All OrganizationAttorneys
     * Gets a list of all &#x60;OrganizationAttorney&#x60; entities.
     *
     * @return Successful response - returns an array of &#x60;OrganizationAttorney&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getAllOrganizationAttorneys",
        summary = "List All OrganizationAttorneys",
        description = "Gets a list of all `OrganizationAttorney` entities.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `OrganizationAttorney` entities.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = OrganizationAttorney.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/organization-attorneys/list",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<OrganizationAttorney>> getAllOrganizationAttorneys(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" }, { \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/organization-attorneys/list : List All OrganizationAttorneys
     * Gets a list of all &#x60;OrganizationAttorney&#x60; entities for case.
     *
     * @param caseId  (required)
     * @return Successful response - returns an array of &#x60;OrganizationAttorney&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getAllOrganizationAttorneysForCase",
        summary = "List All OrganizationAttorneys",
        description = "Gets a list of all `OrganizationAttorney` entities for case.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `OrganizationAttorney` entities.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = OrganizationAttorney.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/organization-attorneys/list",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<OrganizationAttorney>> getAllOrganizationAttorneysForCase(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" }, { \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/attachments/{attachmentId} : Get a Attachment
     * Gets the details of a single instance of a &#x60;Attachment&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;Attachment&#x60;. (required)
     * @param attachmentId  (required)
     * @return Successful response - returns a single &#x60;Attachment&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getAttachment",
        summary = "Get a Attachment",
        description = "Gets the details of a single instance of a `Attachment`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `Attachment`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Attachment.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/attachments/{attachmentId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Attachment> getAttachment(
        @Parameter(name = "caseId", description = "A unique identifier for a `Attachment`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "attachmentId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("attachmentId") Long attachmentId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"extension\" : \"extension\", \"organisationId\" : \"organisationId\", \"attachmentType\" : \"ONE_PAGER\", \"description\" : \"description\", \"fileSizeBytes\" : 1, \"uploadFileName\" : \"uploadFileName\", \"deleted\" : true, \"uploadDate\" : \"2000-01-23T04:56:07.000+00:00\", \"internalURI\" : \"internalURI\", \"caseId\" : 6, \"id\" : 0, \"internalFileName\" : \"internalFileName\", \"knfExportDate\" : \"2000-01-23T04:56:07.000+00:00\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/attachments/{attachmentId}/binary : Retrieve attachment binary content
     * Gets an attachment binary content
     *
     * @param caseId  (required)
     * @param attachmentId  (required)
     * @return Successful response - returns an attachment binary content (status code 200)
     */
    @Operation(
        operationId = "getAttachmentBinaries",
        summary = "Retrieve attachment binary content",
        description = "Gets an attachment binary content",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an attachment binary content", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Object.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/attachments/{attachmentId}/binary",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Object> getAttachmentBinaries(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "attachmentId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("attachmentId") Long attachmentId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/attachments : List All Attachments
     * Gets a list of all &#x60;Attachment&#x60; entities.
     *
     * @param caseId  (required)
     * @return Successful response - returns an array of &#x60;Attachment&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getAttachments",
        summary = "List All Attachments",
        description = "Gets a list of all `Attachment` entities.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `Attachment` entities.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Attachment.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/attachments",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Attachment>> getAttachments(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"extension\" : \"extension\", \"organisationId\" : \"organisationId\", \"attachmentType\" : \"ONE_PAGER\", \"description\" : \"description\", \"fileSizeBytes\" : 1, \"uploadFileName\" : \"uploadFileName\", \"deleted\" : true, \"uploadDate\" : \"2000-01-23T04:56:07.000+00:00\", \"internalURI\" : \"internalURI\", \"caseId\" : 6, \"id\" : 0, \"internalFileName\" : \"internalFileName\", \"knfExportDate\" : \"2000-01-23T04:56:07.000+00:00\" }, { \"extension\" : \"extension\", \"organisationId\" : \"organisationId\", \"attachmentType\" : \"ONE_PAGER\", \"description\" : \"description\", \"fileSizeBytes\" : 1, \"uploadFileName\" : \"uploadFileName\", \"deleted\" : true, \"uploadDate\" : \"2000-01-23T04:56:07.000+00:00\", \"internalURI\" : \"internalURI\", \"caseId\" : 6, \"id\" : 0, \"internalFileName\" : \"internalFileName\", \"knfExportDate\" : \"2000-01-23T04:56:07.000+00:00\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/calculation : Single Calculation
     * Gets a single &#x60;Calculation&#x60; entity.
     *
     * @param caseId  (required)
     * @return Successful response - returns a single &#x60;Calculation&#x60; entity. (status code 200)
     */
    @Operation(
        operationId = "getCalculation",
        summary = "Single Calculation",
        description = "Gets a single `Calculation` entity.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `Calculation` entity.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CalculationSummary.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/calculation",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CalculationSummary> getCalculation(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"kwotaUmorzenia\" : -7.06837403899411E19, \"wysokoscPierwszegoWIBORuZKalkulacji\" : 4.122802483006178E9, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyStalymOprocentowaniuWOstatniejRacie\" : -7.536972926445414E9, \"ostatecznyTerminSplatyKredytu\" : \"2000-01-23T04:56:07.000+00:00\", \"marzaKredytu\" : 1.2747533132666435E9, \"stalaStopaProcentowa\" : 4.772563896771721E9, \"pozostalyKapitalDoSplatyPLN\" : 1.924267833366364E19, \"wysokoscMarzyStalaStopaProcentowa\" : -1.708783940232111E9, \"limitNegocjacyjny\" : [ { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 }, { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 } ], \"wysokoscOprocentowaniaPierwszejRatyPoUruchomieniuZKalkulacji\" : -5.395728226130416E9, \"caseId\" : 6, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyZmiennymOprocentowaniu\" : -2.767846501496151E9, \"id\" : 0, \"notatka\" : \"notatka\", \"wysokoscMarzyZmienneOprocentowanie\" : 8.602888487865067E9, \"procentowyWzrostObnizenieWysokosciRaty\" : -59457.53948049602 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/calculation/{calculationId} : Single CalculationSummary
     * Gets a single &#x60;CalculationSummary&#x60; entity.
     *
     * @param caseId  (required)
     * @param calculationId  (required)
     * @return Successful response - returns a single &#x60;CalculationSummary&#x60; entity. (status code 200)
     */
    @Operation(
        operationId = "getCalculationById",
        summary = "Single CalculationSummary",
        description = "Gets a single `CalculationSummary` entity.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `CalculationSummary` entity.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CalculationSummary.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/calculation/{calculationId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CalculationSummary> getCalculationById(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "calculationId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("calculationId") Long calculationId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"kwotaUmorzenia\" : -7.06837403899411E19, \"wysokoscPierwszegoWIBORuZKalkulacji\" : 4.122802483006178E9, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyStalymOprocentowaniuWOstatniejRacie\" : -7.536972926445414E9, \"ostatecznyTerminSplatyKredytu\" : \"2000-01-23T04:56:07.000+00:00\", \"marzaKredytu\" : 1.2747533132666435E9, \"stalaStopaProcentowa\" : 4.772563896771721E9, \"pozostalyKapitalDoSplatyPLN\" : 1.924267833366364E19, \"wysokoscMarzyStalaStopaProcentowa\" : -1.708783940232111E9, \"limitNegocjacyjny\" : [ { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 }, { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 } ], \"wysokoscOprocentowaniaPierwszejRatyPoUruchomieniuZKalkulacji\" : -5.395728226130416E9, \"caseId\" : 6, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyZmiennymOprocentowaniu\" : -2.767846501496151E9, \"id\" : 0, \"notatka\" : \"notatka\", \"wysokoscMarzyZmienneOprocentowanie\" : 8.602888487865067E9, \"procentowyWzrostObnizenieWysokosciRaty\" : -59457.53948049602 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId} : Get a CaseData
     * Gets the details of a single instance of a &#x60;CaseData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;CaseData&#x60;. (required)
     * @return Successful response - returns a single &#x60;CaseData&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getCaseData",
        summary = "Get a CaseData",
        description = "Gets the details of a single instance of a `CaseData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `CaseData`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CaseData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CaseData> getCaseData(
        @Parameter(name = "caseId", description = "A unique identifier for a `CaseData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"organisationId\" : \"organisationId\", \"numerKontraktu\" : \"numerKontraktu\", \"clientInteractionSummaryId\" : 5, \"knfDataId\" : 2, \"finalizationParametersId\" : 7, \"walutaKredytu\" : \"CHF\", \"mediationOutcomeId\" : 4, \"negotiationLimitIds\" : [ 6, 6 ], \"etapProcesu\" : \"NOWA\", \"statusTechniczny\" : \"NOWA\", \"umowaIndywidualna\" : true, \"sprawaPrzekazanaDoObslugiZewnetrznej\" : true, \"godzinaRejestracji\" : \"godzinaRejestracji\", \"numerSprawy\" : \"numerSprawy\", \"reopenCaseHistory\" : [ { \"closeDate\" : \"2000-01-23T04:56:07.000+00:00\", \"oldCaseId\" : 7 }, { \"closeDate\" : \"2000-01-23T04:56:07.000+00:00\", \"oldCaseId\" : 7 } ], \"wnioskujacyKlient\" : \"wnioskujacyKlient\", \"id\" : 0, \"wartoscKredytu\" : \"wartoscKredytu\", \"calculationSummaryId\" : 2, \"inicjatorProcesu\" : \"BANK\", \"opisPrzedmiotuMediacji\" : \"opisPrzedmiotuMediacji\", \"numerUmowy\" : \"numerUmowy\", \"clientDataIds\" : [ 5, 5 ], \"notatkiIds\" : [ 1, 1 ], \"typSprawy\" : \"MEDIACJE\", \"mediatorIds\" : [ 3, 3 ], \"documentationDataId\" : 1, \"creditDecisionId\" : 1, \"sprawaZmigrowana\" : true, \"dataAktualizacjiStatusu\" : \"2000-01-23T04:56:07.000+00:00\", \"courtHearingMeetingsIds\" : [ 7, 7 ], \"przypisanyUzytkownik\" : { \"id\" : 6, \"label\" : \"label\", \"value\" : \"value\" }, \"creditDataIds\" : [ 1, 1 ], \"dataRejestracji\" : \"2000-01-23T04:56:07.000+00:00\", \"organizationAttorneyIds\" : [ 9, 9 ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/history : Load case history
     *
     * @param caseId identyfikator sprawy wewnatrz Mediator (required)
     * @return Successfull response (status code 200)
     */
    @Operation(
        operationId = "getCaseHistory",
        summary = "Load case history",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successfull response", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = CaseDataRevision.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/history",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<CaseDataRevision>> getCaseHistory(
        @Parameter(name = "caseId", description = "identyfikator sprawy wewnatrz Mediator", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"caseData\" : { \"knfData\" : { \"technicznyIdentyfikatorSprawyWKnf\" : \"technicznyIdentyfikatorSprawyWKnf\", \"dataPrzekazaniaUmowyDoKnf\" : \"2000-01-23\", \"caseId\" : 6, \"sygnaturaSprawy\" : \"sygnaturaSprawy\", \"id\" : 0 }, \"organisationId\" : \"organisationId\", \"numerKontraktu\" : \"numerKontraktu\", \"attachments\" : [ { \"extension\" : \"extension\", \"organisationId\" : \"organisationId\", \"attachmentType\" : \"ONE_PAGER\", \"description\" : \"description\", \"fileSizeBytes\" : 1, \"uploadFileName\" : \"uploadFileName\", \"deleted\" : true, \"uploadDate\" : \"2000-01-23T04:56:07.000+00:00\", \"internalURI\" : \"internalURI\", \"caseId\" : 6, \"id\" : 0, \"internalFileName\" : \"internalFileName\", \"knfExportDate\" : \"2000-01-23T04:56:07.000+00:00\" }, { \"extension\" : \"extension\", \"organisationId\" : \"organisationId\", \"attachmentType\" : \"ONE_PAGER\", \"description\" : \"description\", \"fileSizeBytes\" : 1, \"uploadFileName\" : \"uploadFileName\", \"deleted\" : true, \"uploadDate\" : \"2000-01-23T04:56:07.000+00:00\", \"internalURI\" : \"internalURI\", \"caseId\" : 6, \"id\" : 0, \"internalFileName\" : \"internalFileName\", \"knfExportDate\" : \"2000-01-23T04:56:07.000+00:00\" } ], \"walutaKredytu\" : \"CHF\", \"noteEntities\" : [ { \"authorUiName\" : \"authorUiName\", \"notatki\" : \"notatki\", \"caseId\" : 6, \"dataDodania\" : \"2000-01-23T04:56:07.000+00:00\", \"section\" : \"section\", \"id\" : 0 }, { \"authorUiName\" : \"authorUiName\", \"notatki\" : \"notatki\", \"caseId\" : 6, \"dataDodania\" : \"2000-01-23T04:56:07.000+00:00\", \"section\" : \"section\", \"id\" : 0 } ], \"creatorId\" : \"creatorId\", \"etapProcesu\" : \"NOWA\", \"creditDecision\" : { \"kwotaUmorzenia\" : 1.4658129805029452, \"numerKontraktu\" : \"numerKontraktu\", \"wysokoscPierwszegoWIBORuZKalkulacji\" : -5.3957282261250734E7, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyStalymOprocentowaniuWOstatniejRacie\" : 4.772563896766995E7, \"ostatecznyTerminSplatyKredytu\" : \"2000-01-23T04:56:07.000+00:00\", \"marzaKredytu\" : 1.9242678333644405E7, \"stalaStopaProcentowa\" : -1.7087839402304187E7, \"creditDecisionEvents\" : [ { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 }, { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 } ], \"pozostalyKapitalDoSplatyPLN\" : \"pozostalyKapitalDoSplatyPLN\", \"wysokoscMarzyStalaStopaProcentowa\" : -5.9457539539894104E7, \"numerSprawy\" : \"numerSprawy\", \"caseId\" : 6, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyZmiennymOprocentowaniu\" : 8.60288848785655E7, \"id\" : 0, \"przypisanyUzytkownik\" : { \"id\" : 6, \"label\" : \"label\", \"value\" : \"value\" }, \"wysokoscOprocentowaniaPierwszejRatyPoUruchomieniu\" : 1.2747533132653818E7, \"wysokoscMarzyZmienneOprocentowanie\" : 4.122802483002095E7, \"procentowyWzrostObnizenieWysokosciRaty\" : -27678.46498728331, \"idKlienta\" : \"idKlienta\" }, \"statusTechniczny\" : \"NOWA\", \"umowaIndywidualna\" : true, \"sprawaPrzekazanaDoObslugiZewnetrznej\" : true, \"numerSprawy\" : \"numerSprawy\", \"calculationSummary\" : { \"kwotaUmorzenia\" : -7.06837403899411E19, \"wysokoscPierwszegoWIBORuZKalkulacji\" : 4.122802483006178E9, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyStalymOprocentowaniuWOstatniejRacie\" : -7.536972926445414E9, \"ostatecznyTerminSplatyKredytu\" : \"2000-01-23T04:56:07.000+00:00\", \"marzaKredytu\" : 1.2747533132666435E9, \"stalaStopaProcentowa\" : 4.772563896771721E9, \"pozostalyKapitalDoSplatyPLN\" : 1.924267833366364E19, \"wysokoscMarzyStalaStopaProcentowa\" : -1.708783940232111E9, \"limitNegocjacyjny\" : [ { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 }, { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 } ], \"wysokoscOprocentowaniaPierwszejRatyPoUruchomieniuZKalkulacji\" : -5.395728226130416E9, \"caseId\" : 6, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyZmiennymOprocentowaniu\" : -2.767846501496151E9, \"id\" : 0, \"notatka\" : \"notatka\", \"wysokoscMarzyZmienneOprocentowanie\" : 8.602888487865067E9, \"procentowyWzrostObnizenieWysokosciRaty\" : -59457.53948049602 }, \"caseMediators\" : [ { \"mediatorImie\" : \"mediatorImie\", \"mediatorNazwisko\" : \"mediatorNazwisko\", \"caseId\" : 6, \"id\" : 0, \"adresMailowy\" : \"adresMailowy\", \"knfMediatorId\" : 1, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\" }, { \"mediatorImie\" : \"mediatorImie\", \"mediatorNazwisko\" : \"mediatorNazwisko\", \"caseId\" : 6, \"id\" : 0, \"adresMailowy\" : \"adresMailowy\", \"knfMediatorId\" : 1, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\" } ], \"finalizationParameters\" : { \"outstandingBalanceBeforeSettlementInPLN\" : \"outstandingBalanceBeforeSettlementInPLN\", \"riskGroup\" : \"HIGH_RISK\", \"caseId\" : 6, \"outstandingBalanceBeforeSettlementInCHF\" : \"outstandingBalanceBeforeSettlementInCHF\", \"amountWO\" : \"amountWO\", \"outstandingBalanceAfterTheSettlementInPLN\" : \"outstandingBalanceAfterTheSettlementInPLN\", \"percentageWO\" : \"percentageWO\", \"dataKursuNBP\" : \"2000-01-23\", \"id\" : 0, \"kursNBP\" : \"kursNBP\" }, \"courtHearingMeetings\" : [ { \"uczestnicy\" : [ \"uczestnicy\", \"uczestnicy\" ], \"caseId\" : 6, \"godzinaSpotkania\" : \"godzinaSpotkania\", \"dataSpotkania\" : \"2000-01-23\", \"id\" : 0 }, { \"uczestnicy\" : [ \"uczestnicy\", \"uczestnicy\" ], \"caseId\" : 6, \"godzinaSpotkania\" : \"godzinaSpotkania\", \"dataSpotkania\" : \"2000-01-23\", \"id\" : 0 } ], \"wnioskujacyKlient\" : \"wnioskujacyKlient\", \"id\" : 0, \"lastModifyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\", \"wartoscKredytu\" : \"wartoscKredytu\", \"clientInteractionSummary\" : { \"liczbaProbKontaktuZKlientemRbi\" : \"liczbaProbKontaktuZKlientemRbi\", \"liczbaKontaktowZKlientemRbi\" : \"liczbaKontaktowZKlientemRbi\", \"dataWyslaniaOnePager\" : \"2000-01-23\", \"rozmowyIds\" : [ { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 }, { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 } ], \"caseId\" : 6, \"dataPozytywnejRozmowyZKlientemFirmaZewnetrzna\" : \"2000-01-23\", \"przyczynaOdmowy\" : \"BRAK_ZAINTERESOWANIA_UGODA\", \"liczbaProbKontaktuZKlientemFirmaZewnetrzna\" : \"liczbaProbKontaktuZKlientemFirmaZewnetrzna\", \"statusDokumentacjiKlienta\" : \"statusDokumentacjiKlienta\", \"id\" : 0, \"liczbaKontaktowZKlientemFirmaZewnetrzna\" : \"liczbaKontaktowZKlientemFirmaZewnetrzna\", \"dataPozytywnejRozmowyZKlientemRbi\" : \"2000-01-23\" }, \"createDate\" : \"2000-01-23T04:56:07.000+00:00\", \"inicjatorProcesu\" : \"BANK\", \"creditDataEntities\" : [ { \"dataDanychSekcji\" : \"2000-01-23\", \"numerKontraktu\" : \"numerKontraktu\", \"inneAktywneKredytyKlientaWChf\" : \"inneAktywneKredytyKlientaWChf\", \"formulaSplaty\" : \"RATY_STALE\", \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\" : \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\", \"walutaKredytu\" : \"PLN\", \"upadloscKonsumencka\" : true, \"aktywnyCovid3Moratorium\" : true, \"statusUmowyKredytowej\" : \"AKTYWNA\", \"informacjaODpd\" : \"informacjaODpd\", \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\", \"zalegloscWInsZycie\" : true, \"inneKredytyKlientaPowiazaneZIns\" : \"inneKredytyKlientaPowiazaneZIns\", \"caseId\" : 6, \"id\" : 0, \"aktualneSaldoZadluzeniaWWalucieChfKapital\" : \"aktualneSaldoZadluzeniaWWalucieChfKapital\", \"zalegloscWInsNieruchomosc\" : true, \"dzienPlatnosciRaty\" : \"dzienPlatnosciRaty\", \"indeksowanyCzyDenominowany\" : \"INDEKSOWANY\", \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\", \"numerUmowy\" : \"numerUmowy\", \"zgon\" : true, \"dataZapadalnosciKredytu\" : \"2000-01-23\", \"kwotaWyplaconegoKredytuWPln\" : 1.4658129805029452, \"dataKursuNbp\" : \"2000-01-23\", \"fwk\" : true, \"wysokoscKursu\" : 5.962133916683182, \"aktywnaRestrukturyzacja\" : true, \"sprawaSadowaCourtCase4\" : true }, { \"dataDanychSekcji\" : \"2000-01-23\", \"numerKontraktu\" : \"numerKontraktu\", \"inneAktywneKredytyKlientaWChf\" : \"inneAktywneKredytyKlientaWChf\", \"formulaSplaty\" : \"RATY_STALE\", \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\" : \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\", \"walutaKredytu\" : \"PLN\", \"upadloscKonsumencka\" : true, \"aktywnyCovid3Moratorium\" : true, \"statusUmowyKredytowej\" : \"AKTYWNA\", \"informacjaODpd\" : \"informacjaODpd\", \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\", \"zalegloscWInsZycie\" : true, \"inneKredytyKlientaPowiazaneZIns\" : \"inneKredytyKlientaPowiazaneZIns\", \"caseId\" : 6, \"id\" : 0, \"aktualneSaldoZadluzeniaWWalucieChfKapital\" : \"aktualneSaldoZadluzeniaWWalucieChfKapital\", \"zalegloscWInsNieruchomosc\" : true, \"dzienPlatnosciRaty\" : \"dzienPlatnosciRaty\", \"indeksowanyCzyDenominowany\" : \"INDEKSOWANY\", \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\", \"numerUmowy\" : \"numerUmowy\", \"zgon\" : true, \"dataZapadalnosciKredytu\" : \"2000-01-23\", \"kwotaWyplaconegoKredytuWPln\" : 1.4658129805029452, \"dataKursuNbp\" : \"2000-01-23\", \"fwk\" : true, \"wysokoscKursu\" : 5.962133916683182, \"aktywnaRestrukturyzacja\" : true, \"sprawaSadowaCourtCase4\" : true } ], \"opisPrzedmiotuMediacji\" : \"opisPrzedmiotuMediacji\", \"negotiationLimits\" : [ { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 }, { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 } ], \"numerUmowy\" : \"numerUmowy\", \"mediationOutcome\" : { \"rodzajUgody\" : \"KONTYNUACJA_ZMIENNE_OPROCENTOWANIE\", \"wynegocjowanaMarza\" : \"wynegocjowanaMarza\", \"wynegocjowanaKwotaDoSplaty\" : 1.4658129805029452, \"dataPrzekazaniaDecyzjiNegatywnej\" : \"2000-01-23T04:56:07.000+00:00\", \"dataPrzekazaniaDecyzjiPozytywnej\" : \"2000-01-23\", \"caseId\" : 6, \"decyzjaKlienta\" : \"POZYTYWNA\", \"id\" : 0, \"wynegocjowaneWarunki\" : true }, \"typSprawy\" : \"MEDIACJE\", \"clientDataEntities\" : [ { \"adresZamieszkaniaKraj\" : \"adresZamieszkaniaKraj\", \"kredytobiorcaDoKontaktu\" : true, \"miejsceUrodzenia\" : \"miejsceUrodzenia\", \"adresDoKnfKodPocztowy\" : \"adresDoKnfKodPocztowy\", \"regon\" : \"regon\", \"numerISeriaDokumentu\" : \"numerISeriaDokumentu\", \"adresKorespondencyjnyMiasto\" : \"adresKorespondencyjnyMiasto\", \"adresKorespondencyjnyKodPocztowy\" : \"adresKorespondencyjnyKodPocztowy\", \"adresDoKnfNumerBudynku\" : \"adresDoKnfNumerBudynku\", \"numerTelefonuStacjonarny\" : \"numerTelefonuStacjonarny\", \"numerTelefonuSluzbowy\" : \"numerTelefonuSluzbowy\", \"nazwisko\" : \"nazwisko\", \"adresDoKnfNumerLocalu\" : \"adresDoKnfNumerLocalu\", \"caseId\" : 6, \"rodzajDokumentuTozsamosci\" : \"rodzajDokumentuTozsamosci\", \"id\" : 0, \"pesel\" : \"pesel\", \"adresMailowy\" : \"adresMailowy\", \"adresDoKnfMiasto\" : \"adresDoKnfMiasto\", \"idKlienta\" : \"idKlienta\", \"adresZamieszkaniaMiasto\" : \"adresZamieszkaniaMiasto\", \"klientPodpisalOswiadczeniePit\" : true, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\", \"adresDoKnfUlica\" : \"adresDoKnfUlica\", \"zgodaEmail\" : true, \"nazwaFirmy\" : \"nazwaFirmy\", \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\" : \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\", \"adresDoKnfKraj\" : \"adresDoKnfKraj\", \"dataUrodzenia\" : \"2000-01-23\", \"imie\" : \"imie\", \"adresKorespondencyjnyKraj\" : \"adresKorespondencyjnyKraj\", \"deleted\" : true, \"nazwiskoPanienskieMatki\" : \"nazwiskoPanienskieMatki\", \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\" : \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\", \"adresZamieszkaniaKodPocztowy\" : \"adresZamieszkaniaKodPocztowy\" }, { \"adresZamieszkaniaKraj\" : \"adresZamieszkaniaKraj\", \"kredytobiorcaDoKontaktu\" : true, \"miejsceUrodzenia\" : \"miejsceUrodzenia\", \"adresDoKnfKodPocztowy\" : \"adresDoKnfKodPocztowy\", \"regon\" : \"regon\", \"numerISeriaDokumentu\" : \"numerISeriaDokumentu\", \"adresKorespondencyjnyMiasto\" : \"adresKorespondencyjnyMiasto\", \"adresKorespondencyjnyKodPocztowy\" : \"adresKorespondencyjnyKodPocztowy\", \"adresDoKnfNumerBudynku\" : \"adresDoKnfNumerBudynku\", \"numerTelefonuStacjonarny\" : \"numerTelefonuStacjonarny\", \"numerTelefonuSluzbowy\" : \"numerTelefonuSluzbowy\", \"nazwisko\" : \"nazwisko\", \"adresDoKnfNumerLocalu\" : \"adresDoKnfNumerLocalu\", \"caseId\" : 6, \"rodzajDokumentuTozsamosci\" : \"rodzajDokumentuTozsamosci\", \"id\" : 0, \"pesel\" : \"pesel\", \"adresMailowy\" : \"adresMailowy\", \"adresDoKnfMiasto\" : \"adresDoKnfMiasto\", \"idKlienta\" : \"idKlienta\", \"adresZamieszkaniaMiasto\" : \"adresZamieszkaniaMiasto\", \"klientPodpisalOswiadczeniePit\" : true, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\", \"adresDoKnfUlica\" : \"adresDoKnfUlica\", \"zgodaEmail\" : true, \"nazwaFirmy\" : \"nazwaFirmy\", \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\" : \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\", \"adresDoKnfKraj\" : \"adresDoKnfKraj\", \"dataUrodzenia\" : \"2000-01-23\", \"imie\" : \"imie\", \"adresKorespondencyjnyKraj\" : \"adresKorespondencyjnyKraj\", \"deleted\" : true, \"nazwiskoPanienskieMatki\" : \"nazwiskoPanienskieMatki\", \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\" : \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\", \"adresZamieszkaniaKodPocztowy\" : \"adresZamieszkaniaKodPocztowy\" } ], \"lastModifyUserId\" : \"lastModifyUserId\", \"sprawaZmigrowana\" : true, \"dataAktualizacjiStatusu\" : \"2000-01-23T04:56:07.000+00:00\", \"przypisanyUzytkownik\" : { \"id\" : 6, \"label\" : \"label\", \"value\" : \"value\" }, \"dataRejestracji\" : \"2000-01-23T04:56:07.000+00:00\", \"attorneyEntities\" : [ { \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" }, { \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" } ], \"documentationData\" : { \"dataOtrzymaniaPodpisanychDokumentow\" : \"2000-01-23\", \"dataWysylkiUmowyMediacyjnejDoKnf\" : \"2000-01-23\", \"planowanaDataRealizacji\" : \"2000-01-23\", \"numerDyspozycji\" : \"numerDyspozycji\", \"dataPrzygotowaniaOstatecznejDokumentacji\" : \"2000-01-23\", \"dataOdeslaniaUmowyDoKnf\" : \"2000-01-23\", \"warunkiDecyzji\" : \"warunkiDecyzji\", \"caseId\" : 6, \"czyKlientPodpisalOswiadczeniePit\" : true, \"dataWysylkiDokumentowRNet\" : \"2000-01-23\", \"id\" : 0, \"dataPozytywnegoWynikuMediacji\" : \"2000-01-23\", \"dataKalkulacjiPrzedMediacja\" : \"2000-01-23\", \"dataPrzygotowaniaOstatecznejKalkulacji\" : \"2000-01-23\", \"dataWaznosciDecyzji\" : \"2000-01-23\", \"kompletnoscUmowyMediacyjnej\" : true, \"wymaganaDataPrzygotowaniaKalkulacjiPrzedMediacja\" : \"2000-01-23\", \"dataWysylkiDokumentowKurierem\" : \"2000-01-23\", \"dataWplywuUmowyMediacyjnej\" : \"2000-01-23\", \"dataOdeslaniaUmowyDoKlienta\" : \"2000-01-23\", \"dataPrzygotowaniaDokumentowDoMediacji\" : \"2000-01-23\", \"statusDecyzji\" : \"statusDecyzji\", \"dataZawarciaUgody\" : \"2000-01-23T04:56:07.000+00:00\", \"dataKoniecznegoPrzypomnieniaOZwrocieDokumentow\" : \"2000-01-23\", \"wymaganaDataPrzygotowaniaDokumentacjiPrzedMediacja\" : \"2000-01-23\", \"dataPrzekazaniaDokumentacjiDoKnfKlientaPelnomocnika\" : \"2000-01-23\", \"dataRealizacjiWSystemie\" : \"2000-01-23\", \"czyDokumentyKompletne\" : true } }, \"type\" : \"UNKNOWN\" }, { \"caseData\" : { \"knfData\" : { \"technicznyIdentyfikatorSprawyWKnf\" : \"technicznyIdentyfikatorSprawyWKnf\", \"dataPrzekazaniaUmowyDoKnf\" : \"2000-01-23\", \"caseId\" : 6, \"sygnaturaSprawy\" : \"sygnaturaSprawy\", \"id\" : 0 }, \"organisationId\" : \"organisationId\", \"numerKontraktu\" : \"numerKontraktu\", \"attachments\" : [ { \"extension\" : \"extension\", \"organisationId\" : \"organisationId\", \"attachmentType\" : \"ONE_PAGER\", \"description\" : \"description\", \"fileSizeBytes\" : 1, \"uploadFileName\" : \"uploadFileName\", \"deleted\" : true, \"uploadDate\" : \"2000-01-23T04:56:07.000+00:00\", \"internalURI\" : \"internalURI\", \"caseId\" : 6, \"id\" : 0, \"internalFileName\" : \"internalFileName\", \"knfExportDate\" : \"2000-01-23T04:56:07.000+00:00\" }, { \"extension\" : \"extension\", \"organisationId\" : \"organisationId\", \"attachmentType\" : \"ONE_PAGER\", \"description\" : \"description\", \"fileSizeBytes\" : 1, \"uploadFileName\" : \"uploadFileName\", \"deleted\" : true, \"uploadDate\" : \"2000-01-23T04:56:07.000+00:00\", \"internalURI\" : \"internalURI\", \"caseId\" : 6, \"id\" : 0, \"internalFileName\" : \"internalFileName\", \"knfExportDate\" : \"2000-01-23T04:56:07.000+00:00\" } ], \"walutaKredytu\" : \"CHF\", \"noteEntities\" : [ { \"authorUiName\" : \"authorUiName\", \"notatki\" : \"notatki\", \"caseId\" : 6, \"dataDodania\" : \"2000-01-23T04:56:07.000+00:00\", \"section\" : \"section\", \"id\" : 0 }, { \"authorUiName\" : \"authorUiName\", \"notatki\" : \"notatki\", \"caseId\" : 6, \"dataDodania\" : \"2000-01-23T04:56:07.000+00:00\", \"section\" : \"section\", \"id\" : 0 } ], \"creatorId\" : \"creatorId\", \"etapProcesu\" : \"NOWA\", \"creditDecision\" : { \"kwotaUmorzenia\" : 1.4658129805029452, \"numerKontraktu\" : \"numerKontraktu\", \"wysokoscPierwszegoWIBORuZKalkulacji\" : -5.3957282261250734E7, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyStalymOprocentowaniuWOstatniejRacie\" : 4.772563896766995E7, \"ostatecznyTerminSplatyKredytu\" : \"2000-01-23T04:56:07.000+00:00\", \"marzaKredytu\" : 1.9242678333644405E7, \"stalaStopaProcentowa\" : -1.7087839402304187E7, \"creditDecisionEvents\" : [ { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 }, { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 } ], \"pozostalyKapitalDoSplatyPLN\" : \"pozostalyKapitalDoSplatyPLN\", \"wysokoscMarzyStalaStopaProcentowa\" : -5.9457539539894104E7, \"numerSprawy\" : \"numerSprawy\", \"caseId\" : 6, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyZmiennymOprocentowaniu\" : 8.60288848785655E7, \"id\" : 0, \"przypisanyUzytkownik\" : { \"id\" : 6, \"label\" : \"label\", \"value\" : \"value\" }, \"wysokoscOprocentowaniaPierwszejRatyPoUruchomieniu\" : 1.2747533132653818E7, \"wysokoscMarzyZmienneOprocentowanie\" : 4.122802483002095E7, \"procentowyWzrostObnizenieWysokosciRaty\" : -27678.46498728331, \"idKlienta\" : \"idKlienta\" }, \"statusTechniczny\" : \"NOWA\", \"umowaIndywidualna\" : true, \"sprawaPrzekazanaDoObslugiZewnetrznej\" : true, \"numerSprawy\" : \"numerSprawy\", \"calculationSummary\" : { \"kwotaUmorzenia\" : -7.06837403899411E19, \"wysokoscPierwszegoWIBORuZKalkulacji\" : 4.122802483006178E9, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyStalymOprocentowaniuWOstatniejRacie\" : -7.536972926445414E9, \"ostatecznyTerminSplatyKredytu\" : \"2000-01-23T04:56:07.000+00:00\", \"marzaKredytu\" : 1.2747533132666435E9, \"stalaStopaProcentowa\" : 4.772563896771721E9, \"pozostalyKapitalDoSplatyPLN\" : 1.924267833366364E19, \"wysokoscMarzyStalaStopaProcentowa\" : -1.708783940232111E9, \"limitNegocjacyjny\" : [ { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 }, { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 } ], \"wysokoscOprocentowaniaPierwszejRatyPoUruchomieniuZKalkulacji\" : -5.395728226130416E9, \"caseId\" : 6, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyZmiennymOprocentowaniu\" : -2.767846501496151E9, \"id\" : 0, \"notatka\" : \"notatka\", \"wysokoscMarzyZmienneOprocentowanie\" : 8.602888487865067E9, \"procentowyWzrostObnizenieWysokosciRaty\" : -59457.53948049602 }, \"caseMediators\" : [ { \"mediatorImie\" : \"mediatorImie\", \"mediatorNazwisko\" : \"mediatorNazwisko\", \"caseId\" : 6, \"id\" : 0, \"adresMailowy\" : \"adresMailowy\", \"knfMediatorId\" : 1, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\" }, { \"mediatorImie\" : \"mediatorImie\", \"mediatorNazwisko\" : \"mediatorNazwisko\", \"caseId\" : 6, \"id\" : 0, \"adresMailowy\" : \"adresMailowy\", \"knfMediatorId\" : 1, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\" } ], \"finalizationParameters\" : { \"outstandingBalanceBeforeSettlementInPLN\" : \"outstandingBalanceBeforeSettlementInPLN\", \"riskGroup\" : \"HIGH_RISK\", \"caseId\" : 6, \"outstandingBalanceBeforeSettlementInCHF\" : \"outstandingBalanceBeforeSettlementInCHF\", \"amountWO\" : \"amountWO\", \"outstandingBalanceAfterTheSettlementInPLN\" : \"outstandingBalanceAfterTheSettlementInPLN\", \"percentageWO\" : \"percentageWO\", \"dataKursuNBP\" : \"2000-01-23\", \"id\" : 0, \"kursNBP\" : \"kursNBP\" }, \"courtHearingMeetings\" : [ { \"uczestnicy\" : [ \"uczestnicy\", \"uczestnicy\" ], \"caseId\" : 6, \"godzinaSpotkania\" : \"godzinaSpotkania\", \"dataSpotkania\" : \"2000-01-23\", \"id\" : 0 }, { \"uczestnicy\" : [ \"uczestnicy\", \"uczestnicy\" ], \"caseId\" : 6, \"godzinaSpotkania\" : \"godzinaSpotkania\", \"dataSpotkania\" : \"2000-01-23\", \"id\" : 0 } ], \"wnioskujacyKlient\" : \"wnioskujacyKlient\", \"id\" : 0, \"lastModifyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\", \"wartoscKredytu\" : \"wartoscKredytu\", \"clientInteractionSummary\" : { \"liczbaProbKontaktuZKlientemRbi\" : \"liczbaProbKontaktuZKlientemRbi\", \"liczbaKontaktowZKlientemRbi\" : \"liczbaKontaktowZKlientemRbi\", \"dataWyslaniaOnePager\" : \"2000-01-23\", \"rozmowyIds\" : [ { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 }, { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 } ], \"caseId\" : 6, \"dataPozytywnejRozmowyZKlientemFirmaZewnetrzna\" : \"2000-01-23\", \"przyczynaOdmowy\" : \"BRAK_ZAINTERESOWANIA_UGODA\", \"liczbaProbKontaktuZKlientemFirmaZewnetrzna\" : \"liczbaProbKontaktuZKlientemFirmaZewnetrzna\", \"statusDokumentacjiKlienta\" : \"statusDokumentacjiKlienta\", \"id\" : 0, \"liczbaKontaktowZKlientemFirmaZewnetrzna\" : \"liczbaKontaktowZKlientemFirmaZewnetrzna\", \"dataPozytywnejRozmowyZKlientemRbi\" : \"2000-01-23\" }, \"createDate\" : \"2000-01-23T04:56:07.000+00:00\", \"inicjatorProcesu\" : \"BANK\", \"creditDataEntities\" : [ { \"dataDanychSekcji\" : \"2000-01-23\", \"numerKontraktu\" : \"numerKontraktu\", \"inneAktywneKredytyKlientaWChf\" : \"inneAktywneKredytyKlientaWChf\", \"formulaSplaty\" : \"RATY_STALE\", \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\" : \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\", \"walutaKredytu\" : \"PLN\", \"upadloscKonsumencka\" : true, \"aktywnyCovid3Moratorium\" : true, \"statusUmowyKredytowej\" : \"AKTYWNA\", \"informacjaODpd\" : \"informacjaODpd\", \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\", \"zalegloscWInsZycie\" : true, \"inneKredytyKlientaPowiazaneZIns\" : \"inneKredytyKlientaPowiazaneZIns\", \"caseId\" : 6, \"id\" : 0, \"aktualneSaldoZadluzeniaWWalucieChfKapital\" : \"aktualneSaldoZadluzeniaWWalucieChfKapital\", \"zalegloscWInsNieruchomosc\" : true, \"dzienPlatnosciRaty\" : \"dzienPlatnosciRaty\", \"indeksowanyCzyDenominowany\" : \"INDEKSOWANY\", \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\", \"numerUmowy\" : \"numerUmowy\", \"zgon\" : true, \"dataZapadalnosciKredytu\" : \"2000-01-23\", \"kwotaWyplaconegoKredytuWPln\" : 1.4658129805029452, \"dataKursuNbp\" : \"2000-01-23\", \"fwk\" : true, \"wysokoscKursu\" : 5.962133916683182, \"aktywnaRestrukturyzacja\" : true, \"sprawaSadowaCourtCase4\" : true }, { \"dataDanychSekcji\" : \"2000-01-23\", \"numerKontraktu\" : \"numerKontraktu\", \"inneAktywneKredytyKlientaWChf\" : \"inneAktywneKredytyKlientaWChf\", \"formulaSplaty\" : \"RATY_STALE\", \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\" : \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\", \"walutaKredytu\" : \"PLN\", \"upadloscKonsumencka\" : true, \"aktywnyCovid3Moratorium\" : true, \"statusUmowyKredytowej\" : \"AKTYWNA\", \"informacjaODpd\" : \"informacjaODpd\", \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\", \"zalegloscWInsZycie\" : true, \"inneKredytyKlientaPowiazaneZIns\" : \"inneKredytyKlientaPowiazaneZIns\", \"caseId\" : 6, \"id\" : 0, \"aktualneSaldoZadluzeniaWWalucieChfKapital\" : \"aktualneSaldoZadluzeniaWWalucieChfKapital\", \"zalegloscWInsNieruchomosc\" : true, \"dzienPlatnosciRaty\" : \"dzienPlatnosciRaty\", \"indeksowanyCzyDenominowany\" : \"INDEKSOWANY\", \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\", \"numerUmowy\" : \"numerUmowy\", \"zgon\" : true, \"dataZapadalnosciKredytu\" : \"2000-01-23\", \"kwotaWyplaconegoKredytuWPln\" : 1.4658129805029452, \"dataKursuNbp\" : \"2000-01-23\", \"fwk\" : true, \"wysokoscKursu\" : 5.962133916683182, \"aktywnaRestrukturyzacja\" : true, \"sprawaSadowaCourtCase4\" : true } ], \"opisPrzedmiotuMediacji\" : \"opisPrzedmiotuMediacji\", \"negotiationLimits\" : [ { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 }, { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 } ], \"numerUmowy\" : \"numerUmowy\", \"mediationOutcome\" : { \"rodzajUgody\" : \"KONTYNUACJA_ZMIENNE_OPROCENTOWANIE\", \"wynegocjowanaMarza\" : \"wynegocjowanaMarza\", \"wynegocjowanaKwotaDoSplaty\" : 1.4658129805029452, \"dataPrzekazaniaDecyzjiNegatywnej\" : \"2000-01-23T04:56:07.000+00:00\", \"dataPrzekazaniaDecyzjiPozytywnej\" : \"2000-01-23\", \"caseId\" : 6, \"decyzjaKlienta\" : \"POZYTYWNA\", \"id\" : 0, \"wynegocjowaneWarunki\" : true }, \"typSprawy\" : \"MEDIACJE\", \"clientDataEntities\" : [ { \"adresZamieszkaniaKraj\" : \"adresZamieszkaniaKraj\", \"kredytobiorcaDoKontaktu\" : true, \"miejsceUrodzenia\" : \"miejsceUrodzenia\", \"adresDoKnfKodPocztowy\" : \"adresDoKnfKodPocztowy\", \"regon\" : \"regon\", \"numerISeriaDokumentu\" : \"numerISeriaDokumentu\", \"adresKorespondencyjnyMiasto\" : \"adresKorespondencyjnyMiasto\", \"adresKorespondencyjnyKodPocztowy\" : \"adresKorespondencyjnyKodPocztowy\", \"adresDoKnfNumerBudynku\" : \"adresDoKnfNumerBudynku\", \"numerTelefonuStacjonarny\" : \"numerTelefonuStacjonarny\", \"numerTelefonuSluzbowy\" : \"numerTelefonuSluzbowy\", \"nazwisko\" : \"nazwisko\", \"adresDoKnfNumerLocalu\" : \"adresDoKnfNumerLocalu\", \"caseId\" : 6, \"rodzajDokumentuTozsamosci\" : \"rodzajDokumentuTozsamosci\", \"id\" : 0, \"pesel\" : \"pesel\", \"adresMailowy\" : \"adresMailowy\", \"adresDoKnfMiasto\" : \"adresDoKnfMiasto\", \"idKlienta\" : \"idKlienta\", \"adresZamieszkaniaMiasto\" : \"adresZamieszkaniaMiasto\", \"klientPodpisalOswiadczeniePit\" : true, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\", \"adresDoKnfUlica\" : \"adresDoKnfUlica\", \"zgodaEmail\" : true, \"nazwaFirmy\" : \"nazwaFirmy\", \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\" : \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\", \"adresDoKnfKraj\" : \"adresDoKnfKraj\", \"dataUrodzenia\" : \"2000-01-23\", \"imie\" : \"imie\", \"adresKorespondencyjnyKraj\" : \"adresKorespondencyjnyKraj\", \"deleted\" : true, \"nazwiskoPanienskieMatki\" : \"nazwiskoPanienskieMatki\", \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\" : \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\", \"adresZamieszkaniaKodPocztowy\" : \"adresZamieszkaniaKodPocztowy\" }, { \"adresZamieszkaniaKraj\" : \"adresZamieszkaniaKraj\", \"kredytobiorcaDoKontaktu\" : true, \"miejsceUrodzenia\" : \"miejsceUrodzenia\", \"adresDoKnfKodPocztowy\" : \"adresDoKnfKodPocztowy\", \"regon\" : \"regon\", \"numerISeriaDokumentu\" : \"numerISeriaDokumentu\", \"adresKorespondencyjnyMiasto\" : \"adresKorespondencyjnyMiasto\", \"adresKorespondencyjnyKodPocztowy\" : \"adresKorespondencyjnyKodPocztowy\", \"adresDoKnfNumerBudynku\" : \"adresDoKnfNumerBudynku\", \"numerTelefonuStacjonarny\" : \"numerTelefonuStacjonarny\", \"numerTelefonuSluzbowy\" : \"numerTelefonuSluzbowy\", \"nazwisko\" : \"nazwisko\", \"adresDoKnfNumerLocalu\" : \"adresDoKnfNumerLocalu\", \"caseId\" : 6, \"rodzajDokumentuTozsamosci\" : \"rodzajDokumentuTozsamosci\", \"id\" : 0, \"pesel\" : \"pesel\", \"adresMailowy\" : \"adresMailowy\", \"adresDoKnfMiasto\" : \"adresDoKnfMiasto\", \"idKlienta\" : \"idKlienta\", \"adresZamieszkaniaMiasto\" : \"adresZamieszkaniaMiasto\", \"klientPodpisalOswiadczeniePit\" : true, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\", \"adresDoKnfUlica\" : \"adresDoKnfUlica\", \"zgodaEmail\" : true, \"nazwaFirmy\" : \"nazwaFirmy\", \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\" : \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\", \"adresDoKnfKraj\" : \"adresDoKnfKraj\", \"dataUrodzenia\" : \"2000-01-23\", \"imie\" : \"imie\", \"adresKorespondencyjnyKraj\" : \"adresKorespondencyjnyKraj\", \"deleted\" : true, \"nazwiskoPanienskieMatki\" : \"nazwiskoPanienskieMatki\", \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\" : \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\", \"adresZamieszkaniaKodPocztowy\" : \"adresZamieszkaniaKodPocztowy\" } ], \"lastModifyUserId\" : \"lastModifyUserId\", \"sprawaZmigrowana\" : true, \"dataAktualizacjiStatusu\" : \"2000-01-23T04:56:07.000+00:00\", \"przypisanyUzytkownik\" : { \"id\" : 6, \"label\" : \"label\", \"value\" : \"value\" }, \"dataRejestracji\" : \"2000-01-23T04:56:07.000+00:00\", \"attorneyEntities\" : [ { \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" }, { \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" } ], \"documentationData\" : { \"dataOtrzymaniaPodpisanychDokumentow\" : \"2000-01-23\", \"dataWysylkiUmowyMediacyjnejDoKnf\" : \"2000-01-23\", \"planowanaDataRealizacji\" : \"2000-01-23\", \"numerDyspozycji\" : \"numerDyspozycji\", \"dataPrzygotowaniaOstatecznejDokumentacji\" : \"2000-01-23\", \"dataOdeslaniaUmowyDoKnf\" : \"2000-01-23\", \"warunkiDecyzji\" : \"warunkiDecyzji\", \"caseId\" : 6, \"czyKlientPodpisalOswiadczeniePit\" : true, \"dataWysylkiDokumentowRNet\" : \"2000-01-23\", \"id\" : 0, \"dataPozytywnegoWynikuMediacji\" : \"2000-01-23\", \"dataKalkulacjiPrzedMediacja\" : \"2000-01-23\", \"dataPrzygotowaniaOstatecznejKalkulacji\" : \"2000-01-23\", \"dataWaznosciDecyzji\" : \"2000-01-23\", \"kompletnoscUmowyMediacyjnej\" : true, \"wymaganaDataPrzygotowaniaKalkulacjiPrzedMediacja\" : \"2000-01-23\", \"dataWysylkiDokumentowKurierem\" : \"2000-01-23\", \"dataWplywuUmowyMediacyjnej\" : \"2000-01-23\", \"dataOdeslaniaUmowyDoKlienta\" : \"2000-01-23\", \"dataPrzygotowaniaDokumentowDoMediacji\" : \"2000-01-23\", \"statusDecyzji\" : \"statusDecyzji\", \"dataZawarciaUgody\" : \"2000-01-23T04:56:07.000+00:00\", \"dataKoniecznegoPrzypomnieniaOZwrocieDokumentow\" : \"2000-01-23\", \"wymaganaDataPrzygotowaniaDokumentacjiPrzedMediacja\" : \"2000-01-23\", \"dataPrzekazaniaDokumentacjiDoKnfKlientaPelnomocnika\" : \"2000-01-23\", \"dataRealizacjiWSystemie\" : \"2000-01-23\", \"czyDokumentyKompletne\" : true } }, \"type\" : \"UNKNOWN\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/case-mediator/{caseMediatorId} : Get a CaseMediator
     * Gets the details of a single instance of a &#x60;CaseMediator&#x60;.
     *
     * @param caseId A unique identifier of CaseId. (required)
     * @param caseMediatorId  (required)
     * @return Successful response - returns a single &#x60;CaseMediator&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getCaseMediator",
        summary = "Get a CaseMediator",
        description = "Gets the details of a single instance of a `CaseMediator`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `CaseMediator`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CaseMediator.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/case-mediator/{caseMediatorId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CaseMediator> getCaseMediator(
        @Parameter(name = "caseId", description = "A unique identifier of CaseId.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "caseMediatorId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseMediatorId") Long caseMediatorId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"mediatorImie\" : \"mediatorImie\", \"mediatorNazwisko\" : \"mediatorNazwisko\", \"caseId\" : 6, \"id\" : 0, \"adresMailowy\" : \"adresMailowy\", \"knfMediatorId\" : 1, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/client-data/{clientdataId} : Get a ClientData
     * Gets the details of a single instance of a &#x60;ClientData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;ClientData&#x60;. (required)
     * @param clientdataId  (required)
     * @return Successful response - returns a single &#x60;ClientData&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getClientData",
        summary = "Get a ClientData",
        description = "Gets the details of a single instance of a `ClientData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `ClientData`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ClientData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/client-data/{clientdataId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ClientData> getClientData(
        @Parameter(name = "caseId", description = "A unique identifier for a `ClientData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "clientdataId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clientdataId") String clientdataId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"adresZamieszkaniaKraj\" : \"adresZamieszkaniaKraj\", \"kredytobiorcaDoKontaktu\" : true, \"miejsceUrodzenia\" : \"miejsceUrodzenia\", \"adresDoKnfKodPocztowy\" : \"adresDoKnfKodPocztowy\", \"regon\" : \"regon\", \"numerISeriaDokumentu\" : \"numerISeriaDokumentu\", \"adresKorespondencyjnyMiasto\" : \"adresKorespondencyjnyMiasto\", \"adresKorespondencyjnyKodPocztowy\" : \"adresKorespondencyjnyKodPocztowy\", \"adresDoKnfNumerBudynku\" : \"adresDoKnfNumerBudynku\", \"numerTelefonuStacjonarny\" : \"numerTelefonuStacjonarny\", \"numerTelefonuSluzbowy\" : \"numerTelefonuSluzbowy\", \"nazwisko\" : \"nazwisko\", \"adresDoKnfNumerLocalu\" : \"adresDoKnfNumerLocalu\", \"caseId\" : 6, \"rodzajDokumentuTozsamosci\" : \"rodzajDokumentuTozsamosci\", \"id\" : 0, \"pesel\" : \"pesel\", \"adresMailowy\" : \"adresMailowy\", \"adresDoKnfMiasto\" : \"adresDoKnfMiasto\", \"idKlienta\" : \"idKlienta\", \"adresZamieszkaniaMiasto\" : \"adresZamieszkaniaMiasto\", \"klientPodpisalOswiadczeniePit\" : true, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\", \"adresDoKnfUlica\" : \"adresDoKnfUlica\", \"zgodaEmail\" : true, \"nazwaFirmy\" : \"nazwaFirmy\", \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\" : \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\", \"adresDoKnfKraj\" : \"adresDoKnfKraj\", \"dataUrodzenia\" : \"2000-01-23\", \"imie\" : \"imie\", \"adresKorespondencyjnyKraj\" : \"adresKorespondencyjnyKraj\", \"deleted\" : true, \"nazwiskoPanienskieMatki\" : \"nazwiskoPanienskieMatki\", \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\" : \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\", \"adresZamieszkaniaKodPocztowy\" : \"adresZamieszkaniaKodPocztowy\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/client-interactions/{clientinteractionId} : Get a ClientInteraction
     * Gets the details of a single instance of a &#x60;ClientInteraction&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;ClientInteraction&#x60;. (required)
     * @param clientinteractionId  (required)
     * @return Successful response - returns a single &#x60;ClientInteraction&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getClientInteraction",
        summary = "Get a ClientInteraction",
        description = "Gets the details of a single instance of a `ClientInteraction`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `ClientInteraction`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ClientInteractionSummary.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/client-interactions/{clientinteractionId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ClientInteractionSummary> getClientInteraction(
        @Parameter(name = "caseId", description = "A unique identifier for a `ClientInteraction`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "clientinteractionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clientinteractionId") String clientinteractionId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"liczbaProbKontaktuZKlientemRbi\" : \"liczbaProbKontaktuZKlientemRbi\", \"liczbaKontaktowZKlientemRbi\" : \"liczbaKontaktowZKlientemRbi\", \"dataWyslaniaOnePager\" : \"2000-01-23\", \"rozmowyIds\" : [ { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 }, { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 } ], \"caseId\" : 6, \"dataPozytywnejRozmowyZKlientemFirmaZewnetrzna\" : \"2000-01-23\", \"przyczynaOdmowy\" : \"BRAK_ZAINTERESOWANIA_UGODA\", \"liczbaProbKontaktuZKlientemFirmaZewnetrzna\" : \"liczbaProbKontaktuZKlientemFirmaZewnetrzna\", \"statusDokumentacjiKlienta\" : \"statusDokumentacjiKlienta\", \"id\" : 0, \"liczbaKontaktowZKlientemFirmaZewnetrzna\" : \"liczbaKontaktowZKlientemFirmaZewnetrzna\", \"dataPozytywnejRozmowyZKlientemRbi\" : \"2000-01-23\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/client-interactions/{clientinteractionId}/interaction-events/{interactionEventId} : Get a ClientInteractionEvent
     * Gets the details of a single instance of a &#x60;ClientInteractionEvent&#x60;.
     *
     * @param caseId  (required)
     * @param clientinteractionId  (required)
     * @param interactionEventId  (required)
     * @return Successful response - returns a single &#x60;ClientInteractionEvent&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getClientInteractionEvent",
        summary = "Get a ClientInteractionEvent",
        description = "Gets the details of a single instance of a `ClientInteractionEvent`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `ClientInteractionEvent`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ClientInteractionEvent.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/client-interactions/{clientinteractionId}/interaction-events/{interactionEventId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ClientInteractionEvent> getClientInteractionEvent(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "clientinteractionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clientinteractionId") Long clientinteractionId,
        @Parameter(name = "interactionEventId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("interactionEventId") Long interactionEventId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/client-interactions/{clientinteractionId}/interaction-events : List All ClientInteractionEvents
     * Gets a list of all &#x60;ClientInteractionEvents&#x60; entities.
     *
     * @param caseId  (required)
     * @param clientinteractionId  (required)
     * @return Successful response - returns an array of &#x60;ClientInteractionEvent&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getClientInteractionEvents",
        summary = "List All ClientInteractionEvents",
        description = "Gets a list of all `ClientInteractionEvents` entities.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `ClientInteractionEvent` entities.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = ClientInteractionEvent.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/client-interactions/{clientinteractionId}/interaction-events",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<ClientInteractionEvent>> getClientInteractionEvents(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "clientinteractionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clientinteractionId") Long clientinteractionId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 }, { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/client-interactions : Get a ClientInteraction
     * Gets the details of a single instance of a &#x60;ClientInteraction&#x60; by caseId.
     *
     * @param caseId  (required)
     * @return Successful response - returns single of &#x60;ClientInteraction&#x60; entitie by caseId. (status code 200)
     */
    @Operation(
        operationId = "getClientInteractions",
        summary = "Get a ClientInteraction",
        description = "Gets the details of a single instance of a `ClientInteraction` by caseId.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns single of `ClientInteraction` entitie by caseId.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ClientInteractionSummary.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/client-interactions",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ClientInteractionSummary> getClientInteractions(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"liczbaProbKontaktuZKlientemRbi\" : \"liczbaProbKontaktuZKlientemRbi\", \"liczbaKontaktowZKlientemRbi\" : \"liczbaKontaktowZKlientemRbi\", \"dataWyslaniaOnePager\" : \"2000-01-23\", \"rozmowyIds\" : [ { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 }, { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 } ], \"caseId\" : 6, \"dataPozytywnejRozmowyZKlientemFirmaZewnetrzna\" : \"2000-01-23\", \"przyczynaOdmowy\" : \"BRAK_ZAINTERESOWANIA_UGODA\", \"liczbaProbKontaktuZKlientemFirmaZewnetrzna\" : \"liczbaProbKontaktuZKlientemFirmaZewnetrzna\", \"statusDokumentacjiKlienta\" : \"statusDokumentacjiKlienta\", \"id\" : 0, \"liczbaKontaktowZKlientemFirmaZewnetrzna\" : \"liczbaKontaktowZKlientemFirmaZewnetrzna\", \"dataPozytywnejRozmowyZKlientemRbi\" : \"2000-01-23\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/court-hearing-meetings/{courthearingmeetingId} : Get a CourtHearingMeeting
     * Gets the details of a single instance of a &#x60;CourtHearingMeeting&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;CourtHearingMeeting&#x60;. (required)
     * @param courthearingmeetingId  (required)
     * @return Successful response - returns a single &#x60;CourtHearingMeeting&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getCourtHearingMeeting",
        summary = "Get a CourtHearingMeeting",
        description = "Gets the details of a single instance of a `CourtHearingMeeting`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `CourtHearingMeeting`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CourtHearingMeeting.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/court-hearing-meetings/{courthearingmeetingId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CourtHearingMeeting> getCourtHearingMeeting(
        @Parameter(name = "caseId", description = "A unique identifier for a `CourtHearingMeeting`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "courthearingmeetingId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("courthearingmeetingId") String courthearingmeetingId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"uczestnicy\" : [ \"uczestnicy\", \"uczestnicy\" ], \"caseId\" : 6, \"godzinaSpotkania\" : \"godzinaSpotkania\", \"dataSpotkania\" : \"2000-01-23\", \"id\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/court-hearing-meetings : List All CourtHearingMeetings
     * Gets a list of all &#x60;CourtHearingMeeting&#x60; entities.
     *
     * @param caseId  (required)
     * @return Successful response - returns an array of &#x60;CourtHearingMeeting&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getCourtHearingMeetings",
        summary = "List All CourtHearingMeetings",
        description = "Gets a list of all `CourtHearingMeeting` entities.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `CourtHearingMeeting` entities.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = CourtHearingMeeting.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/court-hearing-meetings",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<CourtHearingMeeting>> getCourtHearingMeetings(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"uczestnicy\" : [ \"uczestnicy\", \"uczestnicy\" ], \"caseId\" : 6, \"godzinaSpotkania\" : \"godzinaSpotkania\", \"dataSpotkania\" : \"2000-01-23\", \"id\" : 0 }, { \"uczestnicy\" : [ \"uczestnicy\", \"uczestnicy\" ], \"caseId\" : 6, \"godzinaSpotkania\" : \"godzinaSpotkania\", \"dataSpotkania\" : \"2000-01-23\", \"id\" : 0 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/credit-data/{creditdataId} : Get a CreditData
     * Gets the details of a single instance of a &#x60;CreditData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;CreditData&#x60;. (required)
     * @param creditdataId  (required)
     * @return Successful response - returns a single &#x60;CreditData&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getCreditData",
        summary = "Get a CreditData",
        description = "Gets the details of a single instance of a `CreditData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `CreditData`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreditData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/credit-data/{creditdataId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CreditData> getCreditData(
        @Parameter(name = "caseId", description = "A unique identifier for a `CreditData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "creditdataId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("creditdataId") String creditdataId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"dataDanychSekcji\" : \"2000-01-23\", \"numerKontraktu\" : \"numerKontraktu\", \"inneAktywneKredytyKlientaWChf\" : \"inneAktywneKredytyKlientaWChf\", \"formulaSplaty\" : \"RATY_STALE\", \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\" : \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\", \"walutaKredytu\" : \"PLN\", \"upadloscKonsumencka\" : true, \"aktywnyCovid3Moratorium\" : true, \"statusUmowyKredytowej\" : \"AKTYWNA\", \"informacjaODpd\" : \"informacjaODpd\", \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\", \"zalegloscWInsZycie\" : true, \"inneKredytyKlientaPowiazaneZIns\" : \"inneKredytyKlientaPowiazaneZIns\", \"caseId\" : 6, \"id\" : 0, \"aktualneSaldoZadluzeniaWWalucieChfKapital\" : \"aktualneSaldoZadluzeniaWWalucieChfKapital\", \"zalegloscWInsNieruchomosc\" : true, \"dzienPlatnosciRaty\" : \"dzienPlatnosciRaty\", \"indeksowanyCzyDenominowany\" : \"INDEKSOWANY\", \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\", \"numerUmowy\" : \"numerUmowy\", \"zgon\" : true, \"dataZapadalnosciKredytu\" : \"2000-01-23\", \"kwotaWyplaconegoKredytuWPln\" : 1.4658129805029452, \"dataKursuNbp\" : \"2000-01-23\", \"fwk\" : true, \"wysokoscKursu\" : 5.962133916683182, \"aktywnaRestrukturyzacja\" : true, \"sprawaSadowaCourtCase4\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/credit-decisions/{creditDecisionId} : Single CreditDecision
     * Gets a single &#x60;CreditDecision&#x60; entity.
     *
     * @param caseId  (required)
     * @param creditDecisionId  (required)
     * @return Successful response - returns a single &#x60;CreditDecision&#x60; entity. (status code 200)
     */
    @Operation(
        operationId = "getCreditDecision",
        summary = "Single CreditDecision",
        description = "Gets a single `CreditDecision` entity.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `CreditDecision` entity.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreditDecision.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/credit-decisions/{creditDecisionId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CreditDecision> getCreditDecision(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "creditDecisionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("creditDecisionId") Long creditDecisionId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"kwotaUmorzenia\" : 1.4658129805029452, \"numerKontraktu\" : \"numerKontraktu\", \"wysokoscPierwszegoWIBORuZKalkulacji\" : -5.3957282261250734E7, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyStalymOprocentowaniuWOstatniejRacie\" : 4.772563896766995E7, \"ostatecznyTerminSplatyKredytu\" : \"2000-01-23T04:56:07.000+00:00\", \"marzaKredytu\" : 1.9242678333644405E7, \"stalaStopaProcentowa\" : -1.7087839402304187E7, \"creditDecisionEvents\" : [ { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 }, { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 } ], \"pozostalyKapitalDoSplatyPLN\" : \"pozostalyKapitalDoSplatyPLN\", \"wysokoscMarzyStalaStopaProcentowa\" : -5.9457539539894104E7, \"numerSprawy\" : \"numerSprawy\", \"caseId\" : 6, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyZmiennymOprocentowaniu\" : 8.60288848785655E7, \"id\" : 0, \"przypisanyUzytkownik\" : { \"id\" : 6, \"label\" : \"label\", \"value\" : \"value\" }, \"wysokoscOprocentowaniaPierwszejRatyPoUruchomieniu\" : 1.2747533132653818E7, \"wysokoscMarzyZmienneOprocentowanie\" : 4.122802483002095E7, \"procentowyWzrostObnizenieWysokosciRaty\" : -27678.46498728331, \"idKlienta\" : \"idKlienta\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/credit-decisions : Single CreditDecision
     * Gets a single &#x60;CreditDecision&#x60; entity.
     *
     * @param caseId  (required)
     * @return Successful response - returns a single &#x60;CreditDecision&#x60; entity. (status code 200)
     */
    @Operation(
        operationId = "getCreditDecisionByCase",
        summary = "Single CreditDecision",
        description = "Gets a single `CreditDecision` entity.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `CreditDecision` entity.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreditDecision.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/credit-decisions",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CreditDecision> getCreditDecisionByCase(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"kwotaUmorzenia\" : 1.4658129805029452, \"numerKontraktu\" : \"numerKontraktu\", \"wysokoscPierwszegoWIBORuZKalkulacji\" : -5.3957282261250734E7, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyStalymOprocentowaniuWOstatniejRacie\" : 4.772563896766995E7, \"ostatecznyTerminSplatyKredytu\" : \"2000-01-23T04:56:07.000+00:00\", \"marzaKredytu\" : 1.9242678333644405E7, \"stalaStopaProcentowa\" : -1.7087839402304187E7, \"creditDecisionEvents\" : [ { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 }, { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 } ], \"pozostalyKapitalDoSplatyPLN\" : \"pozostalyKapitalDoSplatyPLN\", \"wysokoscMarzyStalaStopaProcentowa\" : -5.9457539539894104E7, \"numerSprawy\" : \"numerSprawy\", \"caseId\" : 6, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyZmiennymOprocentowaniu\" : 8.60288848785655E7, \"id\" : 0, \"przypisanyUzytkownik\" : { \"id\" : 6, \"label\" : \"label\", \"value\" : \"value\" }, \"wysokoscOprocentowaniaPierwszejRatyPoUruchomieniu\" : 1.2747533132653818E7, \"wysokoscMarzyZmienneOprocentowanie\" : 4.122802483002095E7, \"procentowyWzrostObnizenieWysokosciRaty\" : -27678.46498728331, \"idKlienta\" : \"idKlienta\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/credit-decisions/{creditDecisionId}/decision-events/{decisionEventId} : Get a CreditDecisionEvent
     * Gets the details of a single instance of a &#x60;CreditDecisionEvent&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;CreditDecisionEvent&#x60;. (required)
     * @param creditDecisionId  (required)
     * @param decisionEventId  (required)
     * @return Successful response - returns a single &#x60;CreditDecisionEvent&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getCreditDecisionEvent",
        summary = "Get a CreditDecisionEvent",
        description = "Gets the details of a single instance of a `CreditDecisionEvent`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `CreditDecisionEvent`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreditDecisionEvent.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/credit-decisions/{creditDecisionId}/decision-events/{decisionEventId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CreditDecisionEvent> getCreditDecisionEvent(
        @Parameter(name = "caseId", description = "A unique identifier for a `CreditDecisionEvent`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "creditDecisionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("creditDecisionId") Long creditDecisionId,
        @Parameter(name = "decisionEventId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("decisionEventId") Long decisionEventId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/credit-decisions/{creditDecisionId}/decision-events : List All CreditDecisionEvents
     * Gets a list of all &#x60;CreditDecisionEvent&#x60; entities.
     *
     * @param caseId  (required)
     * @param creditDecisionId  (required)
     * @return Successful response - returns an array of &#x60;CreditDecisionEvent&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getCreditDecisionEvents",
        summary = "List All CreditDecisionEvents",
        description = "Gets a list of all `CreditDecisionEvent` entities.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `CreditDecisionEvent` entities.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = CreditDecisionEvent.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/credit-decisions/{creditDecisionId}/decision-events",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<CreditDecisionEvent>> getCreditDecisionEvents(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "creditDecisionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("creditDecisionId") Long creditDecisionId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 }, { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/documentation-data/{documentationId} : Get a DocumentationData
     * Gets the details of a single instance of a &#x60;DocumentationData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;DocumentationData&#x60;. (required)
     * @param documentationId  (required)
     * @return Successful response - returns a single &#x60;DocumentationData&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getDocumentationData",
        summary = "Get a DocumentationData",
        description = "Gets the details of a single instance of a `DocumentationData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `DocumentationData`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = DocumentationData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/documentation-data/{documentationId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<DocumentationData> getDocumentationData(
        @Parameter(name = "caseId", description = "A unique identifier for a `DocumentationData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "documentationId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("documentationId") Long documentationId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"dataOtrzymaniaPodpisanychDokumentow\" : \"2000-01-23\", \"dataWysylkiUmowyMediacyjnejDoKnf\" : \"2000-01-23\", \"planowanaDataRealizacji\" : \"2000-01-23\", \"numerDyspozycji\" : \"numerDyspozycji\", \"dataPrzygotowaniaOstatecznejDokumentacji\" : \"2000-01-23\", \"dataOdeslaniaUmowyDoKnf\" : \"2000-01-23\", \"warunkiDecyzji\" : \"warunkiDecyzji\", \"caseId\" : 6, \"czyKlientPodpisalOswiadczeniePit\" : true, \"dataWysylkiDokumentowRNet\" : \"2000-01-23\", \"id\" : 0, \"dataPozytywnegoWynikuMediacji\" : \"2000-01-23\", \"dataKalkulacjiPrzedMediacja\" : \"2000-01-23\", \"dataPrzygotowaniaOstatecznejKalkulacji\" : \"2000-01-23\", \"dataWaznosciDecyzji\" : \"2000-01-23\", \"kompletnoscUmowyMediacyjnej\" : true, \"wymaganaDataPrzygotowaniaKalkulacjiPrzedMediacja\" : \"2000-01-23\", \"dataWysylkiDokumentowKurierem\" : \"2000-01-23\", \"dataWplywuUmowyMediacyjnej\" : \"2000-01-23\", \"dataOdeslaniaUmowyDoKlienta\" : \"2000-01-23\", \"dataPrzygotowaniaDokumentowDoMediacji\" : \"2000-01-23\", \"statusDecyzji\" : \"statusDecyzji\", \"dataZawarciaUgody\" : \"2000-01-23T04:56:07.000+00:00\", \"dataKoniecznegoPrzypomnieniaOZwrocieDokumentow\" : \"2000-01-23\", \"wymaganaDataPrzygotowaniaDokumentacjiPrzedMediacja\" : \"2000-01-23\", \"dataPrzekazaniaDokumentacjiDoKnfKlientaPelnomocnika\" : \"2000-01-23\", \"dataRealizacjiWSystemie\" : \"2000-01-23\", \"czyDokumentyKompletne\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/documentation-data : Get a DocumentationData
     * Gets the details of a single instance of a &#x60;DocumentationData&#x60;.
     *
     * @param caseId  (required)
     * @return Successful response - returns a single &#x60;DocumentationData&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getDocumentationDataByCase",
        summary = "Get a DocumentationData",
        description = "Gets the details of a single instance of a `DocumentationData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `DocumentationData`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = DocumentationData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/documentation-data",
        produces = { "application/json" }
    )
    
    default ResponseEntity<DocumentationData> getDocumentationDataByCase(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"dataOtrzymaniaPodpisanychDokumentow\" : \"2000-01-23\", \"dataWysylkiUmowyMediacyjnejDoKnf\" : \"2000-01-23\", \"planowanaDataRealizacji\" : \"2000-01-23\", \"numerDyspozycji\" : \"numerDyspozycji\", \"dataPrzygotowaniaOstatecznejDokumentacji\" : \"2000-01-23\", \"dataOdeslaniaUmowyDoKnf\" : \"2000-01-23\", \"warunkiDecyzji\" : \"warunkiDecyzji\", \"caseId\" : 6, \"czyKlientPodpisalOswiadczeniePit\" : true, \"dataWysylkiDokumentowRNet\" : \"2000-01-23\", \"id\" : 0, \"dataPozytywnegoWynikuMediacji\" : \"2000-01-23\", \"dataKalkulacjiPrzedMediacja\" : \"2000-01-23\", \"dataPrzygotowaniaOstatecznejKalkulacji\" : \"2000-01-23\", \"dataWaznosciDecyzji\" : \"2000-01-23\", \"kompletnoscUmowyMediacyjnej\" : true, \"wymaganaDataPrzygotowaniaKalkulacjiPrzedMediacja\" : \"2000-01-23\", \"dataWysylkiDokumentowKurierem\" : \"2000-01-23\", \"dataWplywuUmowyMediacyjnej\" : \"2000-01-23\", \"dataOdeslaniaUmowyDoKlienta\" : \"2000-01-23\", \"dataPrzygotowaniaDokumentowDoMediacji\" : \"2000-01-23\", \"statusDecyzji\" : \"statusDecyzji\", \"dataZawarciaUgody\" : \"2000-01-23T04:56:07.000+00:00\", \"dataKoniecznegoPrzypomnieniaOZwrocieDokumentow\" : \"2000-01-23\", \"wymaganaDataPrzygotowaniaDokumentacjiPrzedMediacja\" : \"2000-01-23\", \"dataPrzekazaniaDokumentacjiDoKnfKlientaPelnomocnika\" : \"2000-01-23\", \"dataRealizacjiWSystemie\" : \"2000-01-23\", \"czyDokumentyKompletne\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/finalization-parameters/{finalizationparametersId} : Get a FinalizationParameters
     * Gets the details of a single instance of a &#x60;FinalizationParameters&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;FinalizationParameters&#x60;. (required)
     * @param finalizationparametersId  (required)
     * @return Successful response - returns a single &#x60;FinalizationParameters&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getFinalizationParameters",
        summary = "Get a FinalizationParameters",
        description = "Gets the details of a single instance of a `FinalizationParameters`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `FinalizationParameters`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = FinalizationParameters.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/finalization-parameters/{finalizationparametersId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<FinalizationParameters> getFinalizationParameters(
        @Parameter(name = "caseId", description = "A unique identifier for a `FinalizationParameters`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "finalizationparametersId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("finalizationparametersId") String finalizationparametersId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"outstandingBalanceBeforeSettlementInPLN\" : \"outstandingBalanceBeforeSettlementInPLN\", \"riskGroup\" : \"HIGH_RISK\", \"caseId\" : 6, \"outstandingBalanceBeforeSettlementInCHF\" : \"outstandingBalanceBeforeSettlementInCHF\", \"amountWO\" : \"amountWO\", \"outstandingBalanceAfterTheSettlementInPLN\" : \"outstandingBalanceAfterTheSettlementInPLN\", \"percentageWO\" : \"percentageWO\", \"dataKursuNBP\" : \"2000-01-23\", \"id\" : 0, \"kursNBP\" : \"kursNBP\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/knfHistoryOperations : List of knf operations for specific case.
     * Gets a list of KNF history operations for case.
     *
     * @param caseId  (required)
     * @return Successful response - returns an array of KnfHistoryOperations. (status code 200)
     */
    @Operation(
        operationId = "getHistoryKnfOperations",
        summary = "List of knf operations for specific case.",
        description = "Gets a list of KNF history operations for case.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of KnfHistoryOperations.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = KnfHistoryOperation.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/knfHistoryOperations",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<KnfHistoryOperation>> getHistoryKnfOperations(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"dataOut\" : \"{}\", \"caseId\" : 0, \"creatorId\" : \"creatorId\", \"dataIn\" : \"{}\", \"createDate\" : \"2000-01-23T04:56:07.000+00:00\" }, { \"dataOut\" : \"{}\", \"caseId\" : 0, \"creatorId\" : \"creatorId\", \"dataIn\" : \"{}\", \"createDate\" : \"2000-01-23T04:56:07.000+00:00\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/knf-data/{knfdataId} : Get a KNFData
     * Gets the details of a single instance of a &#x60;KNFData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;KNFData&#x60;. (required)
     * @param knfdataId  (required)
     * @return Successful response - returns a single &#x60;KNFData&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getKNFData",
        summary = "Get a KNFData",
        description = "Gets the details of a single instance of a `KNFData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `KNFData`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = KNFData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/knf-data/{knfdataId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<KNFData> getKNFData(
        @Parameter(name = "caseId", description = "A unique identifier for a `KNFData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "knfdataId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("knfdataId") String knfdataId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"technicznyIdentyfikatorSprawyWKnf\" : \"technicznyIdentyfikatorSprawyWKnf\", \"dataPrzekazaniaUmowyDoKnf\" : \"2000-01-23\", \"caseId\" : 6, \"sygnaturaSprawy\" : \"sygnaturaSprawy\", \"id\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/knf-mediators : List All KNFMediator
     * Gets a list of all &#x60;KNFMediator&#x60; entities.
     *
     * @param caseId  (required)
     * @return Successful response - returns an array of &#x60;KNFMediator&#x60; entities by caseId. (status code 200)
     */
    @Operation(
        operationId = "getKNFMediator",
        summary = "List All KNFMediator",
        description = "Gets a list of all `KNFMediator` entities.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `KNFMediator` entities by caseId.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = KnfMediator.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/knf-mediators",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<KnfMediator>> getKNFMediator(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"dostepnyDo\" : \"2000-01-23\", \"imie\" : \"imie\", \"nazwisko\" : \"nazwisko\", \"dostepnyOd\" : \"2000-01-23\", \"id\" : 0, \"identyfikatorKnf\" : \"identyfikatorKnf\", \"status\" : \"status\" }, { \"dostepnyDo\" : \"2000-01-23\", \"imie\" : \"imie\", \"nazwisko\" : \"nazwisko\", \"dostepnyOd\" : \"2000-01-23\", \"id\" : 0, \"identyfikatorKnf\" : \"identyfikatorKnf\", \"status\" : \"status\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/listOfAvailableParticipants : Get list of available participants to court meeting
     *
     * @param caseId identyfikator sprawy wewnatrz Mediator (required)
     * @return Successfully response (status code 200)
     */
    @Operation(
        operationId = "getListOfAvailableParticipants",
        summary = "Get list of available participants to court meeting",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successfully response", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Person.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/listOfAvailableParticipants",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Person>> getListOfAvailableParticipants(
        @Parameter(name = "caseId", description = "identyfikator sprawy wewnatrz Mediator", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"fullName\" : \"fullName\" }, { \"fullName\" : \"fullName\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/listOfClients : Get list of clients from specified case
     *
     * @param caseId identyfikator sprawy wewnatrz Mediator (required)
     * @return Successfully response (status code 200)
     */
    @Operation(
        operationId = "getListOfClients",
        summary = "Get list of clients from specified case",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successfully response", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Person.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/listOfClients",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Person>> getListOfClients(
        @Parameter(name = "caseId", description = "identyfikator sprawy wewnatrz Mediator", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"fullName\" : \"fullName\" }, { \"fullName\" : \"fullName\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/mediation-outcomes/{mediationoutcomeId} : Get a MediationOutcome
     * Gets the details of a single instance of a &#x60;MediationOutcome&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;MediationOutcome&#x60;. (required)
     * @param mediationoutcomeId  (required)
     * @return Successful response - returns a single &#x60;MediationOutcome&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getMediationOutcome",
        summary = "Get a MediationOutcome",
        description = "Gets the details of a single instance of a `MediationOutcome`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `MediationOutcome`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MediationOutcome.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/mediation-outcomes/{mediationoutcomeId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<MediationOutcome> getMediationOutcome(
        @Parameter(name = "caseId", description = "A unique identifier for a `MediationOutcome`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "mediationoutcomeId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("mediationoutcomeId") String mediationoutcomeId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"rodzajUgody\" : \"KONTYNUACJA_ZMIENNE_OPROCENTOWANIE\", \"wynegocjowanaMarza\" : \"wynegocjowanaMarza\", \"wynegocjowanaKwotaDoSplaty\" : 1.4658129805029452, \"dataPrzekazaniaDecyzjiNegatywnej\" : \"2000-01-23T04:56:07.000+00:00\", \"dataPrzekazaniaDecyzjiPozytywnej\" : \"2000-01-23\", \"caseId\" : 6, \"decyzjaKlienta\" : \"POZYTYWNA\", \"id\" : 0, \"wynegocjowaneWarunki\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/mediation-outcomes : Get MediationOutcomes
     * Gets a  &#x60;MediationOutcome&#x60; entity.
     *
     * @param caseId  (required)
     * @return Successful response - returns an array of &#x60;MediationOutcome&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getMediationOutcomes",
        summary = "Get MediationOutcomes",
        description = "Gets a  `MediationOutcome` entity.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `MediationOutcome` entities.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MediationOutcome.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/mediation-outcomes",
        produces = { "application/json" }
    )
    
    default ResponseEntity<MediationOutcome> getMediationOutcomes(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"rodzajUgody\" : \"KONTYNUACJA_ZMIENNE_OPROCENTOWANIE\", \"wynegocjowanaMarza\" : \"wynegocjowanaMarza\", \"wynegocjowanaKwotaDoSplaty\" : 1.4658129805029452, \"dataPrzekazaniaDecyzjiNegatywnej\" : \"2000-01-23T04:56:07.000+00:00\", \"dataPrzekazaniaDecyzjiPozytywnej\" : \"2000-01-23\", \"caseId\" : 6, \"decyzjaKlienta\" : \"POZYTYWNA\", \"id\" : 0, \"wynegocjowaneWarunki\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/calculation/{calculationId}/negotiation-limits/{negotiationlimitId} : Get a NegotiationLimit
     * Gets the details of a single instance of a &#x60;NegotiationLimit&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;NegotiationLimit&#x60;. (required)
     * @param calculationId  (required)
     * @param negotiationlimitId  (required)
     * @return Successful response - returns a single &#x60;NegotiationLimit&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getNegotiationLimit",
        summary = "Get a NegotiationLimit",
        description = "Gets the details of a single instance of a `NegotiationLimit`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `NegotiationLimit`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NegotiationLimit.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/calculation/{calculationId}/negotiation-limits/{negotiationlimitId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<NegotiationLimit> getNegotiationLimit(
        @Parameter(name = "caseId", description = "A unique identifier for a `NegotiationLimit`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "calculationId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("calculationId") String calculationId,
        @Parameter(name = "negotiationlimitId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("negotiationlimitId") String negotiationlimitId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/calculation/{calculationId}/negotiation-limits : List All NegotiationLimits
     * Gets a list of all &#x60;NegotiationLimit&#x60; entities.
     *
     * @param caseId  (required)
     * @param calculationId  (required)
     * @return Successful response - returns an array of &#x60;NegotiationLimit&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getNegotiationLimits",
        summary = "List All NegotiationLimits",
        description = "Gets a list of all `NegotiationLimit` entities.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `NegotiationLimit` entities.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = NegotiationLimit.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/calculation/{calculationId}/negotiation-limits",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<NegotiationLimit>> getNegotiationLimits(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "calculationId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("calculationId") String calculationId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 }, { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/notes : List All Notes
     * Gets a list of all &#x60;Note&#x60; entities.
     *
     * @param caseId  (required)
     * @param section Section of the note (optional)
     * @return Successful response - returns an array of &#x60;Note&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getNotes",
        summary = "List All Notes",
        description = "Gets a list of all `Note` entities.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `Note` entities.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Note.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/notes",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Note>> getNotes(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "section", description = "Section of the note", in = ParameterIn.QUERY) @Valid @RequestParam(value = "section", required = false) NoteSectionEnum section
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"authorUiName\" : \"authorUiName\", \"notatki\" : \"notatki\", \"caseId\" : 6, \"dataDodania\" : \"2000-01-23T04:56:07.000+00:00\", \"section\" : \"section\", \"id\" : 0 }, { \"authorUiName\" : \"authorUiName\", \"notatki\" : \"notatki\", \"caseId\" : 6, \"dataDodania\" : \"2000-01-23T04:56:07.000+00:00\", \"section\" : \"section\", \"id\" : 0 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/organization-attorneys/{organizationattorneyId} : Get a OrganizationAttorney
     * Gets the details of a single instance of a &#x60;OrganizationAttorney&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;OrganizationAttorney&#x60;. (required)
     * @param organizationattorneyId  (required)
     * @return Successful response - returns a single &#x60;OrganizationAttorney&#x60;. (status code 200)
     */
    @Operation(
        operationId = "getOrganizationAttorney",
        summary = "Get a OrganizationAttorney",
        description = "Gets the details of a single instance of a `OrganizationAttorney`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns a single `OrganizationAttorney`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OrganizationAttorney.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/organization-attorneys/{organizationattorneyId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<OrganizationAttorney> getOrganizationAttorney(
        @Parameter(name = "caseId", description = "A unique identifier for a `OrganizationAttorney`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "organizationattorneyId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("organizationattorneyId") String organizationattorneyId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/organization-attorneys : List All OrganizationAttorneys
     * Gets a list of all &#x60;OrganizationAttorney&#x60; entities.
     *
     * @param caseId  (required)
     * @return Successful response - returns an array of &#x60;OrganizationAttorney&#x60; entities. (status code 200)
     */
    @Operation(
        operationId = "getOrganizationAttorneys",
        summary = "List All OrganizationAttorneys",
        description = "Gets a list of all `OrganizationAttorney` entities.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response - returns an array of `OrganizationAttorney` entities.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = OrganizationAttorney.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/organization-attorneys",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<OrganizationAttorney>> getOrganizationAttorneys(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" }, { \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /case/{caseId}/reopen : Reopen a Case
     * Reopen a &#x60;Case&#x60;.
     *
     * @param caseId  (required)
     * @return Successful response. (status code 201)
     */
    @Operation(
        operationId = "reopenCase",
        summary = "Reopen a Case",
        description = "Reopen a `Case`.",
        responses = {
            @ApiResponse(responseCode = "201", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/case/{caseId}/reopen"
    )
    
    default ResponseEntity<Void> reopenCase(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /case/{caseId}/reopen/validate : Validate reopen a Case
     * Validate reopen a &#x60;Case&#x60;.
     *
     * @param caseId  (required)
     * @return Validate reopen a &#x60;Case&#x60;. (status code 200)
     */
    @Operation(
        operationId = "reopenValidate",
        summary = "Validate reopen a Case",
        description = "Validate reopen a `Case`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Validate reopen a `Case`.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = StatusResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/case/{caseId}/reopen/validate",
        produces = { "application/json" }
    )
    
    default ResponseEntity<StatusResponse> reopenValidate(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/attachments/{attachmentId} : Update a Attachment
     * Updates an existing &#x60;Attachment&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;Attachment&#x60;. (required)
     * @param attachmentId  (required)
     * @param attachment Updated &#x60;Attachment&#x60; information. (required)
     * @return Successful response. (status code 202)
     */
    @Operation(
        operationId = "updateAttachment",
        summary = "Update a Attachment",
        description = "Updates an existing `Attachment`.",
        responses = {
            @ApiResponse(responseCode = "202", description = "Successful response.")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/attachments/{attachmentId}",
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Void> updateAttachment(
        @Parameter(name = "caseId", description = "A unique identifier for a `Attachment`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "attachmentId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("attachmentId") Long attachmentId,
        @Parameter(name = "Attachment", description = "Updated `Attachment` information.", required = true) @Valid @RequestBody Attachment attachment
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/calculation/{calculationId} : Update a CalculationSummary
     * Updates an existing &#x60;CalculationSummary&#x60;.
     *
     * @param caseId  (required)
     * @param calculationId  (required)
     * @param calculationSummary Updated &#x60;CalculationSummary&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateCalculation",
        summary = "Update a CalculationSummary",
        description = "Updates an existing `CalculationSummary`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CalculationSummary.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/calculation/{calculationId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CalculationSummary> updateCalculation(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "calculationId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("calculationId") Long calculationId,
        @Parameter(name = "CalculationSummary", description = "Updated `CalculationSummary` information.", required = true) @Valid @RequestBody CalculationSummary calculationSummary
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"kwotaUmorzenia\" : -7.06837403899411E19, \"wysokoscPierwszegoWIBORuZKalkulacji\" : 4.122802483006178E9, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyStalymOprocentowaniuWOstatniejRacie\" : -7.536972926445414E9, \"ostatecznyTerminSplatyKredytu\" : \"2000-01-23T04:56:07.000+00:00\", \"marzaKredytu\" : 1.2747533132666435E9, \"stalaStopaProcentowa\" : 4.772563896771721E9, \"pozostalyKapitalDoSplatyPLN\" : 1.924267833366364E19, \"wysokoscMarzyStalaStopaProcentowa\" : -1.708783940232111E9, \"limitNegocjacyjny\" : [ { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 }, { \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 } ], \"wysokoscOprocentowaniaPierwszejRatyPoUruchomieniuZKalkulacji\" : -5.395728226130416E9, \"caseId\" : 6, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyZmiennymOprocentowaniu\" : -2.767846501496151E9, \"id\" : 0, \"notatka\" : \"notatka\", \"wysokoscMarzyZmienneOprocentowanie\" : 8.602888487865067E9, \"procentowyWzrostObnizenieWysokosciRaty\" : -59457.53948049602 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId} : Update a CaseData
     * Updates an existing &#x60;CaseData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;CaseData&#x60;. (required)
     * @param caseData Updated &#x60;CaseData&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateCaseData",
        summary = "Update a CaseData",
        description = "Updates an existing `CaseData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CaseData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CaseData> updateCaseData(
        @Parameter(name = "caseId", description = "A unique identifier for a `CaseData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "CaseData", description = "Updated `CaseData` information.", required = true) @Valid @RequestBody CaseData caseData
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"organisationId\" : \"organisationId\", \"numerKontraktu\" : \"numerKontraktu\", \"clientInteractionSummaryId\" : 5, \"knfDataId\" : 2, \"finalizationParametersId\" : 7, \"walutaKredytu\" : \"CHF\", \"mediationOutcomeId\" : 4, \"negotiationLimitIds\" : [ 6, 6 ], \"etapProcesu\" : \"NOWA\", \"statusTechniczny\" : \"NOWA\", \"umowaIndywidualna\" : true, \"sprawaPrzekazanaDoObslugiZewnetrznej\" : true, \"godzinaRejestracji\" : \"godzinaRejestracji\", \"numerSprawy\" : \"numerSprawy\", \"reopenCaseHistory\" : [ { \"closeDate\" : \"2000-01-23T04:56:07.000+00:00\", \"oldCaseId\" : 7 }, { \"closeDate\" : \"2000-01-23T04:56:07.000+00:00\", \"oldCaseId\" : 7 } ], \"wnioskujacyKlient\" : \"wnioskujacyKlient\", \"id\" : 0, \"wartoscKredytu\" : \"wartoscKredytu\", \"calculationSummaryId\" : 2, \"inicjatorProcesu\" : \"BANK\", \"opisPrzedmiotuMediacji\" : \"opisPrzedmiotuMediacji\", \"numerUmowy\" : \"numerUmowy\", \"clientDataIds\" : [ 5, 5 ], \"notatkiIds\" : [ 1, 1 ], \"typSprawy\" : \"MEDIACJE\", \"mediatorIds\" : [ 3, 3 ], \"documentationDataId\" : 1, \"creditDecisionId\" : 1, \"sprawaZmigrowana\" : true, \"dataAktualizacjiStatusu\" : \"2000-01-23T04:56:07.000+00:00\", \"courtHearingMeetingsIds\" : [ 7, 7 ], \"przypisanyUzytkownik\" : { \"id\" : 6, \"label\" : \"label\", \"value\" : \"value\" }, \"creditDataIds\" : [ 1, 1 ], \"dataRejestracji\" : \"2000-01-23T04:56:07.000+00:00\", \"organizationAttorneyIds\" : [ 9, 9 ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/case-mediator/{caseMediatorId} : Update a CaseMediator
     * Updates an existing &#x60;CaseMediator&#x60;.
     *
     * @param caseId A unique identifier of CaseId. (required)
     * @param caseMediatorId  (required)
     * @param caseMediator Updated &#x60;CaseMediator&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateCaseMediator",
        summary = "Update a CaseMediator",
        description = "Updates an existing `CaseMediator`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CaseMediator.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/case-mediator/{caseMediatorId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CaseMediator> updateCaseMediator(
        @Parameter(name = "caseId", description = "A unique identifier of CaseId.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "caseMediatorId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseMediatorId") Long caseMediatorId,
        @Parameter(name = "CaseMediator", description = "Updated `CaseMediator` information.", required = true) @Valid @RequestBody CaseMediator caseMediator
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"mediatorImie\" : \"mediatorImie\", \"mediatorNazwisko\" : \"mediatorNazwisko\", \"caseId\" : 6, \"id\" : 0, \"adresMailowy\" : \"adresMailowy\", \"knfMediatorId\" : 1, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/client-data/{clientdataId} : Update a ClientData
     * Updates an existing &#x60;ClientData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;ClientData&#x60;. (required)
     * @param clientdataId  (required)
     * @param clientData Updated &#x60;ClientData&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateClientData",
        summary = "Update a ClientData",
        description = "Updates an existing `ClientData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ClientData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/client-data/{clientdataId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ClientData> updateClientData(
        @Parameter(name = "caseId", description = "A unique identifier for a `ClientData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "clientdataId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clientdataId") String clientdataId,
        @Parameter(name = "ClientData", description = "Updated `ClientData` information.", required = true) @Valid @RequestBody ClientData clientData
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"adresZamieszkaniaKraj\" : \"adresZamieszkaniaKraj\", \"kredytobiorcaDoKontaktu\" : true, \"miejsceUrodzenia\" : \"miejsceUrodzenia\", \"adresDoKnfKodPocztowy\" : \"adresDoKnfKodPocztowy\", \"regon\" : \"regon\", \"numerISeriaDokumentu\" : \"numerISeriaDokumentu\", \"adresKorespondencyjnyMiasto\" : \"adresKorespondencyjnyMiasto\", \"adresKorespondencyjnyKodPocztowy\" : \"adresKorespondencyjnyKodPocztowy\", \"adresDoKnfNumerBudynku\" : \"adresDoKnfNumerBudynku\", \"numerTelefonuStacjonarny\" : \"numerTelefonuStacjonarny\", \"numerTelefonuSluzbowy\" : \"numerTelefonuSluzbowy\", \"nazwisko\" : \"nazwisko\", \"adresDoKnfNumerLocalu\" : \"adresDoKnfNumerLocalu\", \"caseId\" : 6, \"rodzajDokumentuTozsamosci\" : \"rodzajDokumentuTozsamosci\", \"id\" : 0, \"pesel\" : \"pesel\", \"adresMailowy\" : \"adresMailowy\", \"adresDoKnfMiasto\" : \"adresDoKnfMiasto\", \"idKlienta\" : \"idKlienta\", \"adresZamieszkaniaMiasto\" : \"adresZamieszkaniaMiasto\", \"klientPodpisalOswiadczeniePit\" : true, \"numerTelefonuKomorkowy\" : \"numerTelefonuKomorkowy\", \"adresDoKnfUlica\" : \"adresDoKnfUlica\", \"zgodaEmail\" : true, \"nazwaFirmy\" : \"nazwaFirmy\", \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\" : \"adresKorespondencyjnyUlicaNrBudynkuOrazNrLokalu\", \"adresDoKnfKraj\" : \"adresDoKnfKraj\", \"dataUrodzenia\" : \"2000-01-23\", \"imie\" : \"imie\", \"adresKorespondencyjnyKraj\" : \"adresKorespondencyjnyKraj\", \"deleted\" : true, \"nazwiskoPanienskieMatki\" : \"nazwiskoPanienskieMatki\", \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\" : \"adresZamieszkaniaUlicaNrBudynkuOrazNrLokalu\", \"adresZamieszkaniaKodPocztowy\" : \"adresZamieszkaniaKodPocztowy\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/client-interactions/{clientinteractionId} : Update a ClientInteraction
     * Updates an existing &#x60;ClientInteraction&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;ClientInteraction&#x60;. (required)
     * @param clientinteractionId  (required)
     * @param clientInteractionSummary Updated &#x60;ClientInteraction&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateClientInteraction",
        summary = "Update a ClientInteraction",
        description = "Updates an existing `ClientInteraction`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ClientInteractionSummary.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/client-interactions/{clientinteractionId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ClientInteractionSummary> updateClientInteraction(
        @Parameter(name = "caseId", description = "A unique identifier for a `ClientInteraction`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "clientinteractionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clientinteractionId") String clientinteractionId,
        @Parameter(name = "ClientInteractionSummary", description = "Updated `ClientInteraction` information.", required = true) @Valid @RequestBody ClientInteractionSummary clientInteractionSummary
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"liczbaProbKontaktuZKlientemRbi\" : \"liczbaProbKontaktuZKlientemRbi\", \"liczbaKontaktowZKlientemRbi\" : \"liczbaKontaktowZKlientemRbi\", \"dataWyslaniaOnePager\" : \"2000-01-23\", \"rozmowyIds\" : [ { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 }, { \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 } ], \"caseId\" : 6, \"dataPozytywnejRozmowyZKlientemFirmaZewnetrzna\" : \"2000-01-23\", \"przyczynaOdmowy\" : \"BRAK_ZAINTERESOWANIA_UGODA\", \"liczbaProbKontaktuZKlientemFirmaZewnetrzna\" : \"liczbaProbKontaktuZKlientemFirmaZewnetrzna\", \"statusDokumentacjiKlienta\" : \"statusDokumentacjiKlienta\", \"id\" : 0, \"liczbaKontaktowZKlientemFirmaZewnetrzna\" : \"liczbaKontaktowZKlientemFirmaZewnetrzna\", \"dataPozytywnejRozmowyZKlientemRbi\" : \"2000-01-23\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/client-interactions/{clientinteractionId}/interaction-events/{interactionEventId} : Update a ClientInteractionEvent
     * Updates an existing &#x60;ClientInteractionEvent&#x60;.
     *
     * @param caseId  (required)
     * @param clientinteractionId  (required)
     * @param interactionEventId  (required)
     * @param clientInteractionEvent Updated &#x60;ClientInteractionEvent&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateClientInteractionEvent",
        summary = "Update a ClientInteractionEvent",
        description = "Updates an existing `ClientInteractionEvent`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ClientInteractionEvent.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/client-interactions/{clientinteractionId}/interaction-events/{interactionEventId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ClientInteractionEvent> updateClientInteractionEvent(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "clientinteractionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clientinteractionId") Long clientinteractionId,
        @Parameter(name = "interactionEventId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("interactionEventId") Long interactionEventId,
        @Parameter(name = "ClientInteractionEvent", description = "Updated `ClientInteractionEvent` information.", required = true) @Valid @RequestBody ClientInteractionEvent clientInteractionEvent
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"typPolaczenia\" : \"WYCHODZACE\", \"notatkiPoRozmowie\" : \"notatkiPoRozmowie\", \"doradca\" : \"doradca\", \"dataRozmowy\" : \"2000-01-23T04:56:07.000+00:00\", \"statusKontaktu\" : \"BRAK_KONTAKTU\", \"caseId\" : 5, \"id\" : 1, \"rozmowca\" : \"rozmowca\", \"dataZaplanowanegoKontaktu\" : \"2000-01-23T04:56:07.000+00:00\", \"clientInteractionId\" : 5 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/court-hearing-meetings/{courthearingmeetingId} : Update a CourtHearingMeeting
     * Updates an existing &#x60;CourtHearingMeeting&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;CourtHearingMeeting&#x60;. (required)
     * @param courthearingmeetingId  (required)
     * @param courtHearingMeeting Updated &#x60;CourtHearingMeeting&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateCourtHearingMeeting",
        summary = "Update a CourtHearingMeeting",
        description = "Updates an existing `CourtHearingMeeting`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CourtHearingMeeting.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/court-hearing-meetings/{courthearingmeetingId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CourtHearingMeeting> updateCourtHearingMeeting(
        @Parameter(name = "caseId", description = "A unique identifier for a `CourtHearingMeeting`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "courthearingmeetingId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("courthearingmeetingId") String courthearingmeetingId,
        @Parameter(name = "CourtHearingMeeting", description = "Updated `CourtHearingMeeting` information.", required = true) @Valid @RequestBody CourtHearingMeeting courtHearingMeeting
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"uczestnicy\" : [ \"uczestnicy\", \"uczestnicy\" ], \"caseId\" : 6, \"godzinaSpotkania\" : \"godzinaSpotkania\", \"dataSpotkania\" : \"2000-01-23\", \"id\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/credit-data/{creditdataId} : Update a CreditData
     * Updates an existing &#x60;CreditData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;CreditData&#x60;. (required)
     * @param creditdataId  (required)
     * @param creditData Updated &#x60;CreditData&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateCreditData",
        summary = "Update a CreditData",
        description = "Updates an existing `CreditData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreditData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/credit-data/{creditdataId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CreditData> updateCreditData(
        @Parameter(name = "caseId", description = "A unique identifier for a `CreditData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "creditdataId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("creditdataId") String creditdataId,
        @Parameter(name = "CreditData", description = "Updated `CreditData` information.", required = true) @Valid @RequestBody CreditData creditData
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"dataDanychSekcji\" : \"2000-01-23\", \"numerKontraktu\" : \"numerKontraktu\", \"inneAktywneKredytyKlientaWChf\" : \"inneAktywneKredytyKlientaWChf\", \"formulaSplaty\" : \"RATY_STALE\", \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\" : \"aktualneSaldoZadluzaniaWPlnPrzeliczonePoKursieSrednimNbp\", \"walutaKredytu\" : \"PLN\", \"upadloscKonsumencka\" : true, \"aktywnyCovid3Moratorium\" : true, \"statusUmowyKredytowej\" : \"AKTYWNA\", \"informacjaODpd\" : \"informacjaODpd\", \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaChf\", \"zalegloscWInsZycie\" : true, \"inneKredytyKlientaPowiazaneZIns\" : \"inneKredytyKlientaPowiazaneZIns\", \"caseId\" : 6, \"id\" : 0, \"aktualneSaldoZadluzeniaWWalucieChfKapital\" : \"aktualneSaldoZadluzeniaWWalucieChfKapital\", \"zalegloscWInsNieruchomosc\" : true, \"dzienPlatnosciRaty\" : \"dzienPlatnosciRaty\", \"indeksowanyCzyDenominowany\" : \"INDEKSOWANY\", \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\" : \"aktualnaWymaganaRataKapitalowoOdsetkowaPrzeliczonaPoKursieSrednimNbp\", \"numerUmowy\" : \"numerUmowy\", \"zgon\" : true, \"dataZapadalnosciKredytu\" : \"2000-01-23\", \"kwotaWyplaconegoKredytuWPln\" : 1.4658129805029452, \"dataKursuNbp\" : \"2000-01-23\", \"fwk\" : true, \"wysokoscKursu\" : 5.962133916683182, \"aktywnaRestrukturyzacja\" : true, \"sprawaSadowaCourtCase4\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/credit-decisions/{creditDecisionId} : Update a CreditDecision
     * Updates an existing &#x60;CreditDecision&#x60;.
     *
     * @param caseId  (required)
     * @param creditDecisionId  (required)
     * @param creditDecision Updated &#x60;CreditDecision&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateCreditDecision",
        summary = "Update a CreditDecision",
        description = "Updates an existing `CreditDecision`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreditDecision.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/credit-decisions/{creditDecisionId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CreditDecision> updateCreditDecision(
        @Parameter(name = "caseId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "creditDecisionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("creditDecisionId") Long creditDecisionId,
        @Parameter(name = "CreditDecision", description = "Updated `CreditDecision` information.", required = true) @Valid @RequestBody CreditDecision creditDecision
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"kwotaUmorzenia\" : 1.4658129805029452, \"numerKontraktu\" : \"numerKontraktu\", \"wysokoscPierwszegoWIBORuZKalkulacji\" : -5.3957282261250734E7, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyStalymOprocentowaniuWOstatniejRacie\" : 4.772563896766995E7, \"ostatecznyTerminSplatyKredytu\" : \"2000-01-23T04:56:07.000+00:00\", \"marzaKredytu\" : 1.9242678333644405E7, \"stalaStopaProcentowa\" : -1.7087839402304187E7, \"creditDecisionEvents\" : [ { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 }, { \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 } ], \"pozostalyKapitalDoSplatyPLN\" : \"pozostalyKapitalDoSplatyPLN\", \"wysokoscMarzyStalaStopaProcentowa\" : -5.9457539539894104E7, \"numerSprawy\" : \"numerSprawy\", \"caseId\" : 6, \"szacunkowaWysokoscOstatniejZaplaconejRatyPrzyZmiennymOprocentowaniu\" : 8.60288848785655E7, \"id\" : 0, \"przypisanyUzytkownik\" : { \"id\" : 6, \"label\" : \"label\", \"value\" : \"value\" }, \"wysokoscOprocentowaniaPierwszejRatyPoUruchomieniu\" : 1.2747533132653818E7, \"wysokoscMarzyZmienneOprocentowanie\" : 4.122802483002095E7, \"procentowyWzrostObnizenieWysokosciRaty\" : -27678.46498728331, \"idKlienta\" : \"idKlienta\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/credit-decisions/{creditDecisionId}/decision-events/{decisionEventId} : Update a CreditDecisionEvent
     * Updates an existing &#x60;CreditDecisionEvent&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;CreditDecisionEvent&#x60;. (required)
     * @param creditDecisionId  (required)
     * @param decisionEventId  (required)
     * @param creditDecisionEvent Updated &#x60;CreditDecisionEvent&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateCreditDecisionEvent",
        summary = "Update a CreditDecisionEvent",
        description = "Updates an existing `CreditDecisionEvent`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreditDecisionEvent.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/credit-decisions/{creditDecisionId}/decision-events/{decisionEventId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CreditDecisionEvent> updateCreditDecisionEvent(
        @Parameter(name = "caseId", description = "A unique identifier for a `CreditDecisionEvent`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "creditDecisionId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("creditDecisionId") Long creditDecisionId,
        @Parameter(name = "decisionEventId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("decisionEventId") Long decisionEventId,
        @Parameter(name = "CreditDecisionEvent", description = "Updated `CreditDecisionEvent` information.", required = true) @Valid @RequestBody CreditDecisionEvent creditDecisionEvent
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"warunkiDecyzji\" : \"warunkiDecyzji\", \"dataDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"statusDecyzji\" : \"POZYTYWNA\", \"caseId\" : 1, \"creditDecisionId\" : 1, \"dataWaznosciDecyzji\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/documentation-data/{documentationId} : Update a DocumentationData
     * Updates an existing &#x60;DocumentationData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;DocumentationData&#x60;. (required)
     * @param documentationId  (required)
     * @param documentationData Updated &#x60;DocumentationData&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateDocumentationData",
        summary = "Update a DocumentationData",
        description = "Updates an existing `DocumentationData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = DocumentationData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/documentation-data/{documentationId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<DocumentationData> updateDocumentationData(
        @Parameter(name = "caseId", description = "A unique identifier for a `DocumentationData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") Long caseId,
        @Parameter(name = "documentationId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("documentationId") Long documentationId,
        @Parameter(name = "DocumentationData", description = "Updated `DocumentationData` information.", required = true) @Valid @RequestBody DocumentationData documentationData
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"dataOtrzymaniaPodpisanychDokumentow\" : \"2000-01-23\", \"dataWysylkiUmowyMediacyjnejDoKnf\" : \"2000-01-23\", \"planowanaDataRealizacji\" : \"2000-01-23\", \"numerDyspozycji\" : \"numerDyspozycji\", \"dataPrzygotowaniaOstatecznejDokumentacji\" : \"2000-01-23\", \"dataOdeslaniaUmowyDoKnf\" : \"2000-01-23\", \"warunkiDecyzji\" : \"warunkiDecyzji\", \"caseId\" : 6, \"czyKlientPodpisalOswiadczeniePit\" : true, \"dataWysylkiDokumentowRNet\" : \"2000-01-23\", \"id\" : 0, \"dataPozytywnegoWynikuMediacji\" : \"2000-01-23\", \"dataKalkulacjiPrzedMediacja\" : \"2000-01-23\", \"dataPrzygotowaniaOstatecznejKalkulacji\" : \"2000-01-23\", \"dataWaznosciDecyzji\" : \"2000-01-23\", \"kompletnoscUmowyMediacyjnej\" : true, \"wymaganaDataPrzygotowaniaKalkulacjiPrzedMediacja\" : \"2000-01-23\", \"dataWysylkiDokumentowKurierem\" : \"2000-01-23\", \"dataWplywuUmowyMediacyjnej\" : \"2000-01-23\", \"dataOdeslaniaUmowyDoKlienta\" : \"2000-01-23\", \"dataPrzygotowaniaDokumentowDoMediacji\" : \"2000-01-23\", \"statusDecyzji\" : \"statusDecyzji\", \"dataZawarciaUgody\" : \"2000-01-23T04:56:07.000+00:00\", \"dataKoniecznegoPrzypomnieniaOZwrocieDokumentow\" : \"2000-01-23\", \"wymaganaDataPrzygotowaniaDokumentacjiPrzedMediacja\" : \"2000-01-23\", \"dataPrzekazaniaDokumentacjiDoKnfKlientaPelnomocnika\" : \"2000-01-23\", \"dataRealizacjiWSystemie\" : \"2000-01-23\", \"czyDokumentyKompletne\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/finalization-parameters/{finalizationparametersId} : Update a FinalizationParameters
     * Updates an existing &#x60;FinalizationParameters&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;FinalizationParameters&#x60;. (required)
     * @param finalizationparametersId  (required)
     * @param finalizationParameters Updated &#x60;FinalizationParameters&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateFinalizationParameters",
        summary = "Update a FinalizationParameters",
        description = "Updates an existing `FinalizationParameters`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = FinalizationParameters.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/finalization-parameters/{finalizationparametersId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<FinalizationParameters> updateFinalizationParameters(
        @Parameter(name = "caseId", description = "A unique identifier for a `FinalizationParameters`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "finalizationparametersId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("finalizationparametersId") String finalizationparametersId,
        @Parameter(name = "FinalizationParameters", description = "Updated `FinalizationParameters` information.", required = true) @Valid @RequestBody FinalizationParameters finalizationParameters
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"outstandingBalanceBeforeSettlementInPLN\" : \"outstandingBalanceBeforeSettlementInPLN\", \"riskGroup\" : \"HIGH_RISK\", \"caseId\" : 6, \"outstandingBalanceBeforeSettlementInCHF\" : \"outstandingBalanceBeforeSettlementInCHF\", \"amountWO\" : \"amountWO\", \"outstandingBalanceAfterTheSettlementInPLN\" : \"outstandingBalanceAfterTheSettlementInPLN\", \"percentageWO\" : \"percentageWO\", \"dataKursuNBP\" : \"2000-01-23\", \"id\" : 0, \"kursNBP\" : \"kursNBP\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/knf-data/{knfdataId} : Update a KNFData
     * Updates an existing &#x60;KNFData&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;KNFData&#x60;. (required)
     * @param knfdataId  (required)
     * @param knFData Updated &#x60;KNFData&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateKNFData",
        summary = "Update a KNFData",
        description = "Updates an existing `KNFData`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = KNFData.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/knf-data/{knfdataId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<KNFData> updateKNFData(
        @Parameter(name = "caseId", description = "A unique identifier for a `KNFData`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "knfdataId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("knfdataId") String knfdataId,
        @Parameter(name = "KNFData", description = "Updated `KNFData` information.", required = true) @Valid @RequestBody KNFData knFData
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"technicznyIdentyfikatorSprawyWKnf\" : \"technicznyIdentyfikatorSprawyWKnf\", \"dataPrzekazaniaUmowyDoKnf\" : \"2000-01-23\", \"caseId\" : 6, \"sygnaturaSprawy\" : \"sygnaturaSprawy\", \"id\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/mediation-outcomes/{mediationoutcomeId} : Update a MediationOutcome
     * Updates an existing &#x60;MediationOutcome&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;MediationOutcome&#x60;. (required)
     * @param mediationoutcomeId  (required)
     * @param mediationOutcome Updated &#x60;MediationOutcome&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateMediationOutcome",
        summary = "Update a MediationOutcome",
        description = "Updates an existing `MediationOutcome`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MediationOutcome.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/mediation-outcomes/{mediationoutcomeId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<MediationOutcome> updateMediationOutcome(
        @Parameter(name = "caseId", description = "A unique identifier for a `MediationOutcome`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "mediationoutcomeId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("mediationoutcomeId") String mediationoutcomeId,
        @Parameter(name = "MediationOutcome", description = "Updated `MediationOutcome` information.", required = true) @Valid @RequestBody MediationOutcome mediationOutcome
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"rodzajUgody\" : \"KONTYNUACJA_ZMIENNE_OPROCENTOWANIE\", \"wynegocjowanaMarza\" : \"wynegocjowanaMarza\", \"wynegocjowanaKwotaDoSplaty\" : 1.4658129805029452, \"dataPrzekazaniaDecyzjiNegatywnej\" : \"2000-01-23T04:56:07.000+00:00\", \"dataPrzekazaniaDecyzjiPozytywnej\" : \"2000-01-23\", \"caseId\" : 6, \"decyzjaKlienta\" : \"POZYTYWNA\", \"id\" : 0, \"wynegocjowaneWarunki\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/calculation/{calculationId}/negotiation-limits/{negotiationlimitId} : Update a NegotiationLimit
     * Updates an existing &#x60;NegotiationLimit&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;NegotiationLimit&#x60;. (required)
     * @param calculationId  (required)
     * @param negotiationlimitId  (required)
     * @param negotiationLimit Updated &#x60;NegotiationLimit&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateNegotiationLimit",
        summary = "Update a NegotiationLimit",
        description = "Updates an existing `NegotiationLimit`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NegotiationLimit.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/calculation/{calculationId}/negotiation-limits/{negotiationlimitId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<NegotiationLimit> updateNegotiationLimit(
        @Parameter(name = "caseId", description = "A unique identifier for a `NegotiationLimit`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "calculationId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("calculationId") String calculationId,
        @Parameter(name = "negotiationlimitId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("negotiationlimitId") String negotiationlimitId,
        @Parameter(name = "NegotiationLimit", description = "Updated `NegotiationLimit` information.", required = true) @Valid @RequestBody NegotiationLimit negotiationLimit
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"rodzajUgody\" : \"rodzajUgody\", \"roznicaMiedzyWysokoscMarzyStalaStopaProcentowaAMarzaMinimalna\" : 5.000958304058838E7, \"roznicaMiedzyWysokoscMarzyZmienneOprocentowanieAMarzaMinimalna\" : -6.956301403009033E7, \"marzaPP\" : 8.73862054282125E9, \"dodatkoweUzgodnienia\" : \"dodatkoweUzgodnienia\", \"inne\" : \"inne\", \"negocjacja\" : \"MARZA\", \"marzaMinimalna\" : -7.6538514980880375E9, \"caseId\" : 1, \"decyzjaRbi\" : \"decyzjaRbi\", \"dataUzytkownika\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : 1, \"saldoKapitaluPoUgodzie\" : 9.931562435781122E19, \"kwotaDoJakiejMoznaObnizycSaldoKredytu\" : 3.69370539670528E19, \"roznicaPomiedzyPozostalyKapitalDoSplatyPLNAKwotaDoJakiejMoznaObnizycSaldoKredytu\" : 4.9154895473675305E19 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /case/{caseId}/organization-attorneys/{organizationattorneyId} : Update a OrganizationAttorney
     * Updates an existing &#x60;OrganizationAttorney&#x60;.
     *
     * @param caseId A unique identifier for a &#x60;OrganizationAttorney&#x60;. (required)
     * @param organizationattorneyId  (required)
     * @param organizationAttorney Updated &#x60;OrganizationAttorney&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @Operation(
        operationId = "updateOrganizationAttorney",
        summary = "Update a OrganizationAttorney",
        description = "Updates an existing `OrganizationAttorney`.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OrganizationAttorney.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/case/{caseId}/organization-attorneys/{organizationattorneyId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<OrganizationAttorney> updateOrganizationAttorney(
        @Parameter(name = "caseId", description = "A unique identifier for a `OrganizationAttorney`.", required = true, in = ParameterIn.PATH) @PathVariable("caseId") String caseId,
        @Parameter(name = "organizationattorneyId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("organizationattorneyId") String organizationattorneyId,
        @Parameter(name = "OrganizationAttorney", description = "Updated `OrganizationAttorney` information.", required = true) @Valid @RequestBody OrganizationAttorney organizationAttorney
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"numerTelefonuKmorkowy\" : \"numerTelefonuKmorkowy\", \"imieINazwisko1\" : \"imieINazwisko1\", \"imieINazwisko2\" : \"imieINazwisko2\", \"id\" : 0, \"adresMailowy\" : \"adresMailowy\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
